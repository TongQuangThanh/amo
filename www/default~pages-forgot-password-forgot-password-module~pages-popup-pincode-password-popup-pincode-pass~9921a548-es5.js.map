{"version":3,"sources":["webpack:///src/app/pages/popup-pincode-password/popup-pincode-password.page.html","webpack:///src/app/pages/popup-pincode-password/popup-pincode-password.page.ts"],"names":["PopupPincodePasswordPage","apiService","loading","modalController","navParams","color","isHidden","codeSize","isChecking","isError","initiateBuilder","phoneNumber","data","setupPreventResentCode","isEnableResentCode","self","timmerCount","timmer","setInterval","changes","stylebody","document","body","style","undefined","setProperty","currentValue","pinCodeFormGroup","i","formController","value","disabled","required","addControl","v_pinCodeArray","Object","keys","forEach","key","push","pinCodeArray","get","enable","input","querySelectorAll","item","focus","$event","index","v_index","reg","RegExp","disable","test","target","pinCodeValue","valid","checkingPincode","length","forgotPassword","subscribe","result","error","present","verifyTokenCode","dismiss","finishPinCode","onClosedData","JSON","stringify","message","token","closeModal","resentPinCode","selector","templateUrl","styleUrls"],"mappings":"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","file":"default~pages-forgot-password-forgot-password-module~pages-popup-pincode-password-popup-pincode-pass~9921a548-es5.js","sourcesContent":["<ion-content>\r\n  <div class=\"content-container\">\r\n    <ion-item lines=\"none\" class=\"header-item\">\r\n      <ion-buttons slot=\"end\" class=\"\" (click)=\"closeModal()\" class=\"btn-close-popup\">\r\n        <ion-icon name=\"close\"></ion-icon>\r\n      </ion-buttons>\r\n    </ion-item>\r\n    <ion-toolbar class=\"ion-text-center modal-item\">\r\n      \r\n      <ion-item lines=\"none\" class=\"note-style\">\r\n        <ion-label class=\"ion-text-wrap label-text\">{{ 'PINCODE_PASSWORD.pincode_note' | translate }}</ion-label>\r\n      </ion-item>\r\n      <ion-item lines=\"none\" class=\"padding-none margin-none\">\r\n        <ion-grid class=\"pinCodeGrid\">\r\n          <form [formGroup]='pinCodeFormGroup' class=\"form-class\">\r\n            <ion-row>\r\n              <ion-col *ngFor=\"let controlItem of this.pinCodeArray;let i = index;let last=last\">\r\n                <input \r\n                  ng-pattern=\"/^[0-9]*$/\"\r\n                  ng-maxlength=\"1\"\r\n                  maxlength=\"1\"\r\n                  class=\"pinCodeInput\"\r\n                  type=\"number\"\r\n                  formControlName=\"{{controlItem}}\"\r\n                  (keyup)=\"onKeyUp($event,controlItem, i)\"\r\n                  (keydown)=\"onKeyDown($event)\"/>\r\n              </ion-col>\r\n            </ion-row>\r\n          </form>\r\n        </ion-grid>\r\n      </ion-item>\r\n      <ion-label *ngIf=\"isError == true\" class=\"wrong-code\">{{ 'PINCODE_PASSWORD.wrong_code' | translate }}</ion-label>\r\n      <ion-item lines=\"none\" class=\"image-item\"> \r\n        <ion-spinner *ngIf=\"isChecking == true\" name=\"crescent\" class=\"image-icon-check\"></ion-spinner>\r\n      </ion-item>\r\n      <ion-item lines=\"none\" class=\"label-item ion-text-center\">\r\n        <ion-label class=\"timecounter-label\">{{ 'PINCODE_PASSWORD.timecounter' | translate }} <span *ngIf=\"isEnableResentCode == false\" class=\"timecounter\">{{ timmerCount }}</span><span>(s)</span></ion-label>\r\n        <!-- <ion-label *ngIf=\"isEnableResentCode == false\" class=\"timecounter\">{{ timmerCount }} <span>(s)</span></ion-label> -->\r\n      </ion-item>\r\n      <ion-toolbar class=\"label-item ion-text-center\">\r\n        <ion-button class=\"btn-resend\" (click)=\"resentPinCode()\" disabled=\"!isEnableResentCode\">\r\n          <ion-label class=\"btn-resend-label\">{{ 'PINCODE_PASSWORD.btn_resend_code' | translate }} </ion-label>\r\n        </ion-button>        \r\n      </ion-toolbar>\r\n      <!-- <ion-item *ngIf=\"isError == true\" lines=\"none\" class=\"ion-text-center\">\r\n        <ion-label slot=\"end\" class=\"wrong-code\">{{ 'PINCODE_PASSWORD.wrong_code' | translate }}</ion-label>\r\n      </ion-item> -->\r\n    </ion-toolbar>\r\n  </div>\r\n\r\n</ion-content>\r\n","import { Component, Input, Output, EventEmitter, SimpleChanges, OnInit } from '@angular/core';\r\nimport { Validators, FormGroup, FormArray, FormControl, FormBuilder } from '@angular/forms';\r\nimport { LoadingService } from '../../services/loading/loading.service';\r\nimport { ApiService } from '../../services/api/api.service';\r\nimport { ModalController, NavParams } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-popup-pincode-password',\r\n  templateUrl: './popup-pincode-password.page.html',\r\n  styleUrls: ['./popup-pincode-password.page.scss'],\r\n})\r\nexport class PopupPincodePasswordPage implements OnInit {\r\n\r\n  pinCodeArray: any[];\r\n  pinCodeFormGroup: FormGroup;\r\n  phoneNumber: string;\r\n  color: string=\"gray\";\r\n  isHidden: boolean = false;\r\n  codeSize: number = 4;\r\n  isChecking:boolean= false;\r\n  isError:boolean=false;\r\n  isEnableResentCode: boolean;\r\n  timmer:any;\r\n  timmerCount: number;\r\n\r\n  constructor(\r\n    private apiService: ApiService,\r\n    private loading: LoadingService,\r\n    private modalController: ModalController,\r\n    private navParams: NavParams\r\n  ) {\r\n    this.initiateBuilder();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.phoneNumber = this.navParams.data.phoneNumber;\r\n    this.setupPreventResentCode();\r\n  }\r\n\r\n  setupPreventResentCode(){\r\n    this.isEnableResentCode = false;\r\n    var self = this;\r\n    this.timmerCount = 30;\r\n    this.timmer = setInterval(() => {\r\n      if(self.timmerCount > 1){\r\n        self.timmerCount -=1;\r\n      }else{\r\n        self.timmerCount = 0;\r\n        self.isEnableResentCode = true;\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    let stylebody = document.body.style;\r\n    if (changes.color != undefined) {\r\n      stylebody.setProperty('--borderColor', changes.color.currentValue);\r\n    }\r\n    if (changes.isHidden != undefined) {\r\n      if (changes.isHidden.currentValue == false) {\r\n        stylebody.setProperty('--charShape', 'none');\r\n      } else {\r\n        stylebody.setProperty('--charShape', 'disc');\r\n      }\r\n    }\r\n\r\n    this.initiateBuilder();\r\n\r\n  }\r\n\r\n  initiateBuilder() {\r\n    this.pinCodeFormGroup = new FormGroup({});\r\n\r\n    for (let i = 0; i < this.codeSize; i++) {\r\n      let formController: FormControl = new FormControl({ value: '', disabled: true }, [Validators.required]);\r\n      this.pinCodeFormGroup.addControl('codeFiled' + i, formController);\r\n    }\r\n\r\n    let v_pinCodeArray: any[] = [];\r\n    Object.keys(this.pinCodeFormGroup.value).forEach(function (key) {\r\n      v_pinCodeArray.push(key);\r\n    });\r\n\r\n    this.pinCodeArray = v_pinCodeArray;\r\n    this.pinCodeFormGroup.get('codeFiled0').enable();\r\n  }\r\n  ngAfterViewInit() {\r\n    let input: HTMLElement = document.querySelectorAll('.pinCodeInput').item(0) as HTMLElement;\r\n    input.focus();\r\n  }\r\n\r\n\r\n  onKeyUp($event: any, item: any, index: any) {\r\n    let v_index;\r\n\r\n    let reg = new RegExp(\"[0-9]\");\r\n\r\n    if ($event.key == \"Backspace\") {\r\n      if (index == 0) {\r\n        v_index = 0;\r\n      } else {\r\n        v_index = index - 1;\r\n        this.pinCodeFormGroup.get('codeFiled' + index).disable();\r\n\r\n      }\r\n    } else {\r\n      if (reg.test($event.target.value)) {\r\n\r\n        if (index == this.codeSize - 1) {\r\n          v_index = this.codeSize - 1;\r\n        } else {\r\n          v_index = index + 1;\r\n          this.pinCodeFormGroup.get('codeFiled' + v_index).enable();\r\n\r\n        }\r\n      }\r\n    }\r\n\r\n    let input: HTMLElement = document.querySelectorAll('.pinCodeInput').item(v_index) as HTMLElement;\r\n    input.focus();\r\n\r\n\r\n    if (index == this.codeSize - 1 && $event.key != \"Backspace\") {\r\n      let pinCodeValue: string = '';\r\n      Object.keys(this.pinCodeFormGroup.value).forEach((key) => {\r\n        pinCodeValue += this.pinCodeFormGroup.value[key];\r\n      });\r\n\r\n      if (this.pinCodeFormGroup.valid) {\r\n        this.checkingPincode(pinCodeValue);\r\n      } else {\r\n      }\r\n    }\r\n  }\r\n\r\n  onKeyDown($event: any) {\r\n    if ($event.key != \"Backspace\") {\r\n\r\n      if ($event.target.value.length == 1) {\r\n        return false;\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  resentPinCode(){\r\n    if(!this.isEnableResentCode){\r\n      return;\r\n    }\r\n    this.apiService.forgotPassword(this.phoneNumber).subscribe(result => {\r\n    },\r\n    error => {\r\n    });\r\n    this.setupPreventResentCode();\r\n  }\r\n\r\n  checkingPincode(pinCodeValue:string){\r\n    const self = this;\r\n    this.isChecking = true;\r\n    this.loading.present();\r\n    this.apiService.verifyTokenCode(this.phoneNumber, pinCodeValue)\r\n      .subscribe(result => {\r\n        self.isError = false;\r\n        self.loading.dismiss();\r\n        self.finishPinCode(pinCodeValue);\r\n    },\r\n    error => {\r\n      this.isError = true;\r\n      this.isChecking = false;\r\n      self.loading.dismiss();\r\n    });\r\n  }\r\n\r\n  async finishPinCode(pinCodeValue:string){\r\n    const onClosedData = JSON.stringify({\r\n      result: \"0\",\r\n      message: \"success\",\r\n      token: pinCodeValue\r\n    });\r\n    await this.modalController.dismiss(onClosedData);\r\n  }\r\n\r\n  async closeModal() {\r\n    const onClosedData = JSON.stringify({\r\n      result: \"1\",\r\n      message: \"cancel\",\r\n      token:\"\"\r\n    });\r\n    await this.modalController.dismiss(onClosedData);\r\n  }\r\n}\r\n"]}