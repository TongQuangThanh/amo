{"version":3,"sources":["webpack:///src/app/pages/notification-comment/notification-comment.module.ts","webpack:///src/app/pages/notification-comment/notification-comment.page.ts","webpack:///src/app/pages/notification-comment/notification-comment.page.html"],"names":["routes","path","component","NotificationCommentPageModule","forChild","imports","declarations","NotificationCommentPage","translate","alertService","apiService","loading","route","platform","authService","profile","getProfile","listArticlesComment","apartment","ready","then","readySource","heightScreen","height","articleID","snapshot","paramMap","get","currentPage","numberRecordOnPage","NUMBER_RECORD_ON_PAGE","getDefaulUserDeparment","present","self","getListUserApartment","subscribe","result","userApartments","length","_id","dismiss","getArticleComment","error","page","limit","search","event","getListArticleComment","comments","concat","target","complete","inputField","nativeElement","focus","stringDate","formatString","textInput","replace","presentToast","instant","params","content","editorMsg","sendArticleComment","doRefresh","sendMsg","loadData","selector","templateUrl","styleUrls"],"mappings":"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","file":"pages-notification-comment-notification-comment-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { NotificationCommentPage } from './notification-comment.page';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NotificationCommentPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ReactiveFormsModule,\r\n    TranslateModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [NotificationCommentPage]\r\n})\r\nexport class NotificationCommentPageModule {}\r\n","import { Component, ViewChild, ElementRef, OnInit } from '@angular/core';\r\nimport { LoadingService } from '../../services/loading/loading.service';\r\nimport { ApiService } from '../../services/api/api.service';\r\nimport { ConstService } from '../../utils/const.service'\r\nimport { UtilsService } from '../../utils/utils.service'\r\nimport { Platform, NavController } from '@ionic/angular';\r\nimport { AlertService } from '../../services/alert/alert.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { AuthService } from 'src/app/services/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-notification-comment',\r\n  templateUrl: './notification-comment.page.html',\r\n  styleUrls: ['./notification-comment.page.scss'],\r\n})\r\nexport class NotificationCommentPage implements OnInit{\r\n\r\n  listArticlesComment: any;\r\n  currentPage: number;\r\n  numberRecordOnPage: number;\r\n  articleID:string;\r\n  heightScreen:number;\r\n  editorMsg:any;\r\n  apartment: string;\r\n  profile: any;\r\n\r\n\r\n  @ViewChild(\"chat_input\") inputField: ElementRef;\r\n\r\n  constructor(\r\n    private translate: TranslateService,\r\n    private alertService: AlertService,\r\n    private apiService: ApiService,\r\n    private loading: LoadingService,\r\n    private route: ActivatedRoute,\r\n    private platform: Platform,\r\n    private authService: AuthService\r\n  ) {\r\n    this.profile = this.authService.getProfile();\r\n    this.listArticlesComment = [];\r\n    this.apartment = \"\";\r\n    platform.ready().then((readySource) => {\r\n      this.heightScreen = platform.height() - 70- 60;\r\n    });\r\n    this.articleID = this.route.snapshot.paramMap.get('id');\r\n    this.currentPage = 1;\r\n    this.numberRecordOnPage = ConstService.NUMBER_RECORD_ON_PAGE;\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getDefaulUserDeparment();\r\n  }\r\n\r\n  getDefaulUserDeparment(){\r\n    this.loading.present();\r\n    const self = this;\r\n    this.apiService.getListUserApartment()\r\n      .subscribe(result => {\r\n        if(result.userApartments.length > 0){\r\n          self.apartment = result.userApartments[0]._id;\r\n        }\r\n        self.loading.dismiss();\r\n        self.getArticleComment(self.currentPage, self.numberRecordOnPage, self.articleID, '', null)\r\n    },\r\n    error => {\r\n      self.loading.dismiss();\r\n    });\r\n  }\r\n\r\n  getArticleComment(page: number, limit: number, articleID: string, search: string, event: any) {\r\n    this.loading.present();\r\n    const self = this;\r\n    this.apiService.getListArticleComment(page, limit, articleID, search)\r\n      .subscribe(result => {\r\n        if(result.comments.length > 0){\r\n          if(self.currentPage <= 1){\r\n            self.listArticlesComment = result.comments;\r\n          }else{\r\n            self.listArticlesComment = self.listArticlesComment.concat(result.comments);\r\n          }\r\n          \r\n        }\r\n        if (event) {\r\n          event.target.complete();\r\n        }\r\n        self.loading.dismiss();\r\n        self.inputField.nativeElement.focus();\r\n    },\r\n    error => {\r\n      self.loading.dismiss();\r\n    });\r\n  }\r\n\r\n  formatString(stringDate: string) {\r\n    return UtilsService.formatString(stringDate);\r\n  }\r\n\r\n  doRefresh(event) {\r\n    this.currentPage = 1;\r\n    this.numberRecordOnPage = ConstService.NUMBER_RECORD_ON_PAGE;\r\n    this.getArticleComment(this.currentPage, this.numberRecordOnPage, this.articleID, '', event);\r\n  }\r\n\r\n  loadData(event) {\r\n    this.currentPage++;\r\n    this.getArticleComment(this.currentPage, this.numberRecordOnPage, this.articleID, '', event);\r\n  }\r\n  \r\n  convertText(textInput:string){\r\n    return textInput.replace(/\\n/ig, '<br/>');;\r\n  }\r\n\r\n  sendMsg(){\r\n    if(this.apartment == \"\"){\r\n      this.alertService.presentToast(this.translate.instant('NOTIFICATION_COMMENT.msg_apartment_not_correct'));\r\n    }\r\n    this.loading.present();\r\n    const self = this;\r\n    const params = {\r\n      content: this.editorMsg,\r\n      apartment: this.apartment\r\n    }\r\n    this.apiService.sendArticleComment(params, this.articleID)\r\n      .subscribe(result => {\r\n        self.loading.dismiss();\r\n        self.editorMsg = \"\";\r\n        self.doRefresh(null);\r\n    },\r\n    error => {\r\n      self.editorMsg = \"\";\r\n      self.loading.dismiss();\r\n    });\r\n  }\r\n}\r\n","<ion-header class=\"ion-no-border\">\r\n    <ion-toolbar>\r\n      <ion-buttons slot=\"start\">\r\n        <ion-back-button text=\"\"></ion-back-button>\r\n      </ion-buttons>\r\n      <ion-title>{{ 'NOTIFICATION_COMMENT.title' | translate }}</ion-title>\r\n    </ion-toolbar>\r\n  </ion-header>\r\n\r\n<ion-content>\r\n    <div class=\"input-wrap\">\r\n        <!-- <button ion-button clear icon-only item-right (click)=\"switchEmojiPicker()\">\r\n          <ion-icon name=\"md-happy\"></ion-icon>\r\n        </button> -->\r\n        <ion-textarea #chat_input\r\n                  placeholder=\"{{ 'NOTIFICATION_COMMENT.place_holder_input' | translate }}\"\r\n                  [(ngModel)]=\"editorMsg\">\r\n        </ion-textarea>\r\n        <ion-button class=\"button-send\" item-right (click)=\"sendMsg()\">\r\n          <ion-icon name=\"ios-send\" ios=\"ios-send\" md=\"md-send\"></ion-icon>\r\n        </ion-button>\r\n    </div>\r\n    <ion-content class=\"list-home-content\" [style.height.px]=\"heightScreen\">\r\n      <ion-refresher slot=\"fixed\" (ionRefresh)=\"doRefresh($event)\">\r\n        <ion-refresher-content pullingIcon=\"circles\" refreshingSpinner=\"\" refreshingText=\"\"></ion-refresher-content>\r\n      </ion-refresher>\r\n      <ion-list class=\"list-chat-content\">\r\n        <div class=\"message-wrap\">\r\n          <div *ngFor=\"let item of listArticlesComment.reverse()\">\r\n            <div *ngIf=\"item.status == 'approve' || item.createdBy.phone == profile.phone\" class=\"message left\">\r\n              <img class=\"user-img\" *ngIf=\"item.createdBy\" src=\"{{item.createdBy.avatar}}\"/>\r\n              <img  class=\"user-img\"*ngIf=\"!item.createdBy\" src=\"../assets/icon/avatar-default.png\"/>\r\n              <!-- <ion-spinner name=\"dots\" *ngIf=\"msg.status === 'pending'\"></ion-spinner> -->\r\n              <div class=\"msg-detail\">\r\n                <div class=\"msg-info\">\r\n                  <p>{{item.createdBy.displayName}}</p>\r\n                  <p>{{formatString(item.createdAt)}}</p>\r\n                </div>\r\n                <div class=\"msg-content\">\r\n                  <span class=\"triangle\"></span>\r\n                  <p [innerHTML]=\"convertText(item.content)\" ></p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div *ngFor=\"let itemRep of item.replies.reverse()\"\r\n                class=\"message right\">\r\n              <img class=\"user-img\" *ngIf=\"itemRep.createdBy\" src=\"{{itemRep.createdBy.avatar}}\"/>\r\n              <img  class=\"user-img\"*ngIf=\"!itemRep.createdBy\" src=\"../assets/icon/avatar-default.png\"/>\r\n              <!-- <ion-spinner name=\"dots\" *ngIf=\"msg.status === 'pending'\"></ion-spinner> -->\r\n              <div class=\"msg-detail\">\r\n                <div class=\"msg-info\">\r\n                  <p>{{itemRep.createdBy.displayName}}</p>\r\n                  <p>{{formatString(itemRep.createdAt)}}</p>\r\n                </div>\r\n                <div class=\"msg-content\">\r\n                  <span class=\"triangle\"></span>\r\n                  <p [innerHTML]=\"convertText(itemRep.content)\" ></p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- <ion-card *ngFor=\"let item of listArticlesComment\">\r\n          <ion-item>\r\n            <ion-avatar slot=\"start\">\r\n              <img *ngIf=\"item.createdBy\" src=\"{{item.createdBy.avatar}}\"/>\r\n              <img *ngIf=\"!item.createdBy\" src=\"../assets/icon/avatar-default.png\"/>\r\n            </ion-avatar>\r\n            <ion-label>\r\n              <h2 [innerHTML]=\"convertText(item.content)\" ></h2>\r\n              <p *ngIf=\"item.createdBy != null\">{{item.createdBy.displayName}}</p>\r\n              <p>{{formatString(item.createdAt)}}</p>\r\n            </ion-label>\r\n          </ion-item>\r\n          <ion-item *ngFor=\"let itemRep of item.replies.reverse()\">\r\n            <ion-avatar slot=\"start\">\r\n              <img *ngIf=\"itemRep.createdBy\" src=\"{{itemRep.createdBy.avatar}}\"/>\r\n              <img *ngIf=\"!itemRep.createdBy\" src=\"../assets/icon/avatar-default.png\"/>\r\n            </ion-avatar>\r\n            <ion-label>\r\n              <h2 [innerHTML]=\"convertText(itemRep.content)\" ></h2>\r\n              <p *ngIf=\"itemRep.createdBy != null\">{{itemRep.createdBy.displayName}}</p>\r\n              <p>{{formatString(item.createdAt)}}</p>\r\n            </ion-label>\r\n          </ion-item>\r\n        </ion-card> -->\r\n      </ion-list>\r\n      <ion-infinite-scroll threshold=\"100px\" (ionInfinite)=\"loadData($event)\">\r\n        <ion-infinite-scroll-content loadingSpinner=\"\" loadingText=\"\"></ion-infinite-scroll-content>\r\n      </ion-infinite-scroll>\r\n    </ion-content>\r\n</ion-content>"]}