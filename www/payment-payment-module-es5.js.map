{"version":3,"sources":["webpack:///src/app/pages/payment/payment.module.ts","webpack:///src/app/pages/payment/payment.page.ts","webpack:///src/app/pages/payment/payment.page.html"],"names":["routes","path","component","PaymentPageModule","forChild","imports","declarations","PaymentPage","loading","platform","apiService","navCtrl","listPaymentBills","numberRecordOnPage","NUMBER_RECORD_ON_PAGE","segmentModel","myDate","Date","toISOString","totalPayment","ready","then","readySource","heightScreen","height","currentPage","getPaymentLogs","page","limit","category","search","event","isRefresh","present","self","target","complete","getListPayment","subscribe","result","dismiss","paymentBills","length","forEach","bill","payment","today","endAt","status","inOutDays","getDiffDays","push","total","error","$event","navigateForward","id","stringDate","formatString","stringValue","n","parseInt","toFixed","replace","c","i","a","startDate","endDate","diffTime","Math","abs","getTime","ceil","paymentHistoryClick","doRefresh","loadData","selector","templateUrl","styleUrls"],"mappings":"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","file":"payment-payment-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SuperTabsModule } from '@ionic-super-tabs/angular';\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PaymentPage } from './payment.page';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PaymentPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SuperTabsModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    TranslateModule,\r\n    RouterModule.forChild(routes),\r\n  ],\r\n  declarations: [PaymentPage]\r\n})\r\nexport class PaymentPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Platform, NavController } from '@ionic/angular';\r\nimport { ConstService } from 'src/app/utils/const.service';\r\nimport { ApiService } from '../../services/api/api.service';\r\nimport { LoadingService } from '../../services/loading/loading.service';\r\nimport { UtilsService } from '../../utils/utils.service';\r\n\r\n@Component({\r\n  selector: 'app-payment',\r\n  templateUrl: './payment.page.html',\r\n  styleUrls: ['./payment.page.scss'],\r\n})\r\nexport class PaymentPage implements OnInit {\r\n  heightScreen: number;\r\n  // data\r\n  listPaymentBills = [];\r\n  listDataConvert: any;\r\n  currentPage: number;\r\n  numberRecordOnPage = ConstService.NUMBER_RECORD_ON_PAGE;\r\n  segmentModel: string = 'all';\r\n  today: any;\r\n  myDate: String = new Date().toISOString();\r\n  totalPayment = 0;\r\n\r\n  constructor(private loading: LoadingService, private platform: Platform, private apiService: ApiService, private navCtrl: NavController) {\r\n    this.platform.ready().then((readySource) => {\r\n      this.heightScreen = platform.height() - 250;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.currentPage = 1;\r\n    this.getPaymentLogs(this.currentPage, this.numberRecordOnPage, '', '', null, true);\r\n  }\r\n\r\n  ionViewWillEnter() {}\r\n\r\n  getPaymentLogs(page: number, limit: number, category: string, search: string, event: any, isRefresh: boolean) {\r\n    this.loading.present();\r\n    const self = this;\r\n    if (event) {\r\n      event.target.complete();\r\n    }\r\n    this.apiService.getListPayment(page, limit, category, search, 'publish').subscribe(\r\n      (result) => {\r\n        self.loading.dismiss();\r\n        if (!result.paymentBills || result.paymentBills.length == 0) {\r\n          return;\r\n        }\r\n        if(isRefresh) {\r\n          this.listPaymentBills = [];\r\n          this.totalPayment = 0;\r\n        }\r\n        result.paymentBills.forEach((bill) => {\r\n          if (bill.payment) {\r\n            let today = new Date();\r\n            let endAt = new Date(bill.payment.endAt);\r\n            if (today > endAt && bill.status == 'publish') {\r\n              bill.status = 'outdate';\r\n            }\r\n            bill.inOutDays = this.getDiffDays(today, endAt);\r\n            this.listPaymentBills.push(bill);\r\n            this.totalPayment += +bill.total;\r\n          }\r\n        });\r\n      },\r\n      (error) => {\r\n        self.loading.dismiss();\r\n      },\r\n      () => {\r\n        self.loading.dismiss();\r\n        if (event) {\r\n          event.target.complete();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  loadData($event) {\r\n    this.currentPage++;\r\n    this.getPaymentLogs(this.currentPage, this.numberRecordOnPage, '', '', $event, false);\r\n  }\r\n\r\n  paymentHistoryClick() {\r\n    this.navCtrl.navigateForward('/payment-history');\r\n  }\r\n\r\n  detailPage(id) {\r\n    this.navCtrl.navigateForward('/payment-infor/' + id);\r\n  }\r\n\r\n  doRefresh(event) {\r\n    this.currentPage = 1;\r\n    this.getPaymentLogs(this.currentPage, this.numberRecordOnPage, '', '', event, true);\r\n  }\r\n\r\n  formatString(stringDate: string) {\r\n    return UtilsService.formatString(stringDate);\r\n  }\r\n\r\n  formatMoney(stringValue) {\r\n    let n = parseInt(stringValue);\r\n    if (n) {\r\n      return n.toFixed(0).replace(/./g, function (c, i, a) {\r\n        return i > 0 && c !== ',' && (a.length - i) % 3 === 0 ? '.' + c : c;\r\n      });\r\n    } else {\r\n      return '-';\r\n    }\r\n  }\r\n  getDiffDays(startDate: Date, endDate: Date) {\r\n    const diffTime = Math.abs(endDate.getTime() - startDate.getTime());\r\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n  }\r\n}\r\n","<ion-header class=\"ion-no-border payment-header\">\r\n  <ion-button class=\"button-history\" (click)=\"paymentHistoryClick()\">\r\n    <img class=\"icon-history\" src=\"assets/icon/payment/time-circle.svg\" />\r\n    <ion-label class=\"label_history\">{{ 'PAYMENT.label_history' | translate }}</ion-label>\r\n  </ion-button>\r\n  <ion-label class=\"header-sub-title\" *ngIf=\"listPaymentBills.length > 0 && listPaymentBills[0].campaign.settingPaymentMode == 'active'\">{{ 'PAYMENT.need_payment' | translate }}</ion-label>\r\n  <ion-label class=\"header-sub-title\" *ngIf=\"listPaymentBills.length > 0 && listPaymentBills[0].campaign.settingPaymentMode != 'active'\">{{ 'PAYMENT.need_payment_inactive' | translate }}</ion-label>\r\n  <ion-label class=\"header-sub-title\" *ngIf=\"listPaymentBills.length == 0\">{{ 'PAYMENT.need_payment_no_pay' | translate }}</ion-label>\r\n  <ion-label class=\"header-title\" *ngIf=\"listPaymentBills.length > 0 && listPaymentBills[0].campaign.settingPaymentMode == 'active'\">{{ formatMoney(totalPayment) }}đ</ion-label>\r\n  <ion-label class=\"header-title\" *ngIf=\"listPaymentBills.length > 0 && listPaymentBills[0].campaign.settingPaymentMode != 'active'\">{{ formatMoney(listPaymentBills[0].total) }}đ</ion-label>\r\n</ion-header>\r\n\r\n<ion-content class=\"has-header payment-container\">\r\n  <ion-refresher slot=\"fixed\" (ionRefresh)=\"doRefresh($event)\" pullMin=\"100\">\r\n    <ion-refresher-content pullingIcon=\"circles\" refreshingSpinner=\"\" refreshingText=\"\"></ion-refresher-content>\r\n  </ion-refresher>\r\n  <ion-item lines=\"none\" class=\"payment-list-title\">\r\n    <ion-label *ngIf=\"listPaymentBills.length > 0 && listPaymentBills[0].campaign.settingPaymentMode == 'active'\">{{\"PAYMENT.payment_list_title\" | translate}}</ion-label>\r\n    <ion-label *ngIf=\"listPaymentBills.length > 0 && listPaymentBills[0].campaign.settingPaymentMode != 'active'\">{{\"PAYMENT.payment_list_title_inactive\" | translate}}</ion-label>\r\n  </ion-item>\r\n\r\n  <ion-list class=\"payment-ion-list\" [style.height.px]=\"heightScreen\">\r\n    <ion-card *ngFor=\"let item of listPaymentBills\" (click)=\"detailPage(item._id)\" class=\"payment-card\">\r\n      <ion-item lines=\"none\" class=\"payment-card-item\">\r\n        <ng-container [ngSwitch]=\"item.status\" *ngIf=\"item?.campaign.settingPaymentMode == 'active'\">\r\n          <ion-label slot=\"start\" class=\"update-time\" *ngSwitchCase=\"'publish'\">\r\n            {{formatString(item.updatedAt)}} - {{ 'PAYMENT.paid_in_days' | translate: { inOutDays: item.inOutDays } }}\r\n          </ion-label>\r\n          <ion-label slot=\"start\" class=\"update-time\" *ngSwitchCase=\"'outdate'\">\r\n            {{formatString(item.updatedAt)}} - {{ 'PAYMENT.paid_out_days' | translate: { inOutDays: item.inOutDays } }}\r\n          </ion-label>\r\n          <ion-label slot=\"start\" class=\"update-time\" *ngSwitchDefault>{{formatString(item.updatedAt)}}</ion-label>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"item?.campaign.settingPaymentMode != 'active'\">\r\n          <ion-label slot=\"start\" class=\"update-time\">{{formatString(item.updatedAt)}}</ion-label>\r\n        </ng-container>\r\n        <ion-badge class=\"badge-status badge-unpaid\" *ngIf=\"item.status == 'publish' && item?.campaign.settingPaymentMode == 'active'\">{{ 'PAYMENT.badge_unpaid' | translate }}</ion-badge>\r\n        <ion-badge class=\"badge-status badge-outdate\" *ngIf=\"item.status == 'outdate' && item?.campaign.settingPaymentMode == 'active'\">{{ 'PAYMENT.badge_outdate' | translate }}</ion-badge>\r\n      </ion-item>\r\n      <ion-text class=\"\">\r\n        <p class=\"payment-title\">{{item?.payment?.title}} - {{item?.apartment.title}} {{item?.campaign.title}}</p>\r\n      </ion-text>\r\n      <div class=\"devider-line-payment\"></div>\r\n\r\n      <ion-item lines=\"none\" class=\"payment-money-item\">\r\n        <ion-label fixed slot=\"start\" class=\"money-title\">{{\"PAYMENT.number_money_label\" | translate}} </ion-label>\r\n        <ion-label class=\"mone-number\">{{formatMoney(item.total)}}đ</ion-label>\r\n        <ion-button class=\"btn-paid\" slot=\"end\" *ngIf=\"item?.campaign.settingPaymentMode == 'active'\">{{\"PAYMENT.btn_paid_label\" | translate}}</ion-button>\r\n      </ion-item>\r\n    </ion-card>\r\n  </ion-list>\r\n  <ion-infinite-scroll threshold=\"100px\" (ionInfinite)=\"loadData($event)\">\r\n    <ion-infinite-scroll-content loadingSpinner=\"\" loadingText=\"\"></ion-infinite-scroll-content>\r\n  </ion-infinite-scroll>\r\n</ion-content>"]}