{"version":3,"sources":["webpack:///src/app/pages/notification/notification.module.ts","webpack:///src/app/pages/notification/notification.page.ts","webpack:///src/app/pages/notification/notification.page.html"],"names":["routes","path","component","NotificationPageModule","forChild","imports","declarations","NotificationPage","loading","apiService","navCtrl","nativePageTransitions","listArticlesNew","listArticlesNoti","currentPageNew","currentPageNoti","numberRecordOnPage","NUMBER_RECORD_ON_PAGE","isNews","getArticles","page","limit","category","search","event","isRefresh","self","getArticleSubscriber","unsubscribe","present","getListArticle","subscribe","result","articles","concat","target","complete","dismiss","error","getPosts","posts","data","survey","localStorage","setItem","JSON","stringify","navigateForward","_id","stringDate","formatString","content","scrollToTop","length","toNews","toNot","doRefresh","loadData","selector","templateUrl","styleUrls"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASA,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAE;AAFb,OADqB,CAAvB;;UAiBaC,sB;;;;;cAAAA;;;;2BAAAA,sB;AAAsB,S;AAAA,kBATxB,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,mEAJO,EAKP,6DAAaC,QAAb,CAAsBJ,MAAtB,CALO,CASwB;;;;4HAAtBG,sB,EAAsB;AAAA,yBAFlB,mEAEkB;AAFF,oBAN7B,4DAM6B,EAL7B,0DAK6B,EAJ7B,0DAI6B,EAH7B,mEAG6B,EAHd,4DAGc;AAEE,S;AALhB,O;;;;;wEAKNA,sB,EAAsB;gBAVlC,sDAUkC;iBAVzB;AACRE,mBAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,mEAJO,EAKP,6DAAaD,QAAb,CAAsBJ,MAAtB,CALO,CADD;AAQRM,wBAAY,EAAE,CAAC,mEAAD;AARN,W;AAUyB,U;;;;;;;;;;;;;;;;;;AC1BnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACoBQ;;;;;;AAAwC;;;;;;AACxC;;;;;;;;AAHJ;;AAAwE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACtE;;AACE;;AACA;;AACA;;AAAkD;;AAAgC;;AAClF;;AACE;;AACF;;AACF;;AACA;;AACE;;AAAqE;;AAAc;;AACrF;;AACF;;;;;;;;AAZmG;;AAEtF;;AAAA;;AACA;;AAAA;;AACyC;;AAAA;;AAMmB;;AAAA;;;;;;AAX3E;;AACE;;AAaF;;;;;;AAbqC;;AAAA;;;;;;AAmB/B;;;;;;AAAwC;;;;;;AACxC;;;;;;;;AAHJ;;AAAyE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACvE;;AACE;;AACA;;AACA;;AAAkD;;AAAgC;;AAClF;;AACE;;AACF;;AACF;;AACA;;AACE;;AAAqE;;AAAc;;AACrF;;AACF;;;;;;;;AAZoG;;AAEvF;;AAAA;;AACA;;AAAA;;AACyC;;AAAA;;AAMmB;;AAAA;;;;;;AAX3E;;AACE;;AAaF;;;;;;AAbqC;;AAAA;;;;UDrB1BC,gB;AAWX,kCACUC,OADV,EAEUC,UAFV,EAGUC,OAHV,EAIUC,qBAJV,EAIsD;AAAA;;AAH5C,eAAAH,OAAA,GAAAA,OAAA;AACA,eAAAC,UAAA,GAAAA,UAAA;AACA,eAAAC,OAAA,GAAAA,OAAA;AACA,eAAAC,qBAAA,GAAAA,qBAAA;AAZV,eAAAC,eAAA,GAAkB,EAAlB;AACA,eAAAC,gBAAA,GAAmB,EAAnB;AACA,eAAAC,cAAA,GAAiB,CAAjB;AACA,eAAAC,eAAA,GAAkB,CAAlB;AAEA,eAAAC,kBAAA,GAAqB,kEAAaC,qBAAlC;AAQI;;;;qCAEO;AACT,iBAAKC,MAAL,GAAc,CAAd;AACA,iBAAKC,WAAL,CAAiB,KAAKL,cAAtB,EAAsC,KAAKE,kBAA3C,EAA+D,EAA/D,EAAmE,EAAnE,EAAuE,IAAvE,EAA6E,IAA7E;AACD;;;6CAEkB,CAAE;;;sCAETI,I,EAAcC,K,EAAeC,Q,EAAkBC,M,EAAgBC,K,EAAYC,S,EAAoB;AACzG,gBAAMC,IAAI,GAAG,IAAb;;AACA,gBAAI,KAAKC,oBAAT,EAA+B;AAC7B,mBAAKA,oBAAL,CAA0BC,WAA1B;AACD;;AACD,iBAAKpB,OAAL,CAAaqB,OAAb;;AACA,gBAAI,KAAKX,MAAL,IAAe,CAAnB,EAAsB;AACpB,mBAAKS,oBAAL,GAA4B,KAAKlB,UAAL,CAAgBqB,cAAhB,CAA+BV,IAA/B,EAAqCC,KAArC,EAA4CC,QAA5C,EAAsDC,MAAtD,EAA8DQ,SAA9D,CAC1B,UAACC,MAAD,EAAY;AACV,oBAAIP,SAAJ,EAAe;AACbC,sBAAI,CAACb,gBAAL,GAAwBmB,MAAM,CAACC,QAA/B;AACD,iBAFD,MAEO;AACLP,sBAAI,CAACb,gBAAL,GAAwBa,IAAI,CAACb,gBAAL,CAAsBqB,MAAtB,CAA6BF,MAAM,CAACC,QAApC,CAAxB;AACD;;AACD,oBAAIT,KAAJ,EAAW;AACTA,uBAAK,CAACW,MAAN,CAAaC,QAAb;AACD;;AACDV,oBAAI,CAAClB,OAAL,CAAa6B,OAAb;AACD,eAXyB,EAY1B,UAACC,KAAD,EAAW;AACTZ,oBAAI,CAAClB,OAAL,CAAa6B,OAAb;AACD,eAdyB,CAA5B;AAgBD,aAjBD,MAiBO;AACL,mBAAKV,oBAAL,GAA4B,KAAKlB,UAAL,CAAgB8B,QAAhB,CAAyBnB,IAAzB,EAA+BC,KAA/B,EAAsCC,QAAtC,EAAgDC,MAAhD,EAAwDQ,SAAxD,CAC1B,UAACC,MAAD,EAAY;AACV,oBAAIP,SAAJ,EAAe;AACbC,sBAAI,CAACd,eAAL,GAAuBoB,MAAM,CAACQ,KAA9B;AACD,iBAFD,MAEO;AACLd,sBAAI,CAACd,eAAL,GAAuBc,IAAI,CAACd,eAAL,CAAqBsB,MAArB,CAA4BF,MAAM,CAACQ,KAAnC,CAAvB;AACD;;AACD,oBAAIhB,KAAJ,EAAW;AACTA,uBAAK,CAACW,MAAN,CAAaC,QAAb;AACD;;AACDV,oBAAI,CAAClB,OAAL,CAAa6B,OAAb;AACD,eAXyB,EAY1B,UAACC,KAAD,EAAW;AACTZ,oBAAI,CAAClB,OAAL,CAAa6B,OAAb;AACD,eAdyB,CAA5B;AAgBD;AACF;;;mCAEQb,K,EAAO;AACd,gBAAI,KAAKN,MAAL,IAAe,CAAnB,EAAsB;AACpB,mBAAKJ,cAAL;AACA,mBAAKK,WAAL,CAAiB,KAAKL,cAAtB,EAAsC,KAAKE,kBAA3C,EAA+D,EAA/D,EAAmE,EAAnE,EAAuEQ,KAAvE,EAA8E,KAA9E;AACD,aAHD,MAGO;AACL,mBAAKT,eAAL;AACA,mBAAKI,WAAL,CAAiB,KAAKJ,eAAtB,EAAuC,KAAKC,kBAA5C,EAAgE,EAAhE,EAAoE,EAApE,EAAwEQ,KAAxE,EAA+E,KAA/E;AACD;AACF;;;qCAEUiB,I,EAAM;AACf,gBAAI,KAAKvB,MAAL,IAAe,CAAnB,EAAsB;AACpB,kBAAGuB,IAAI,SAAJ,IAAAA,IAAI,WAAJ,GAAI,MAAJ,GAAAA,IAAI,CAAEC,MAAT,EAAiB;AACfC,4BAAY,CAACC,OAAb,CAAqB,oBAArB,EAA2CC,IAAI,CAACC,SAAL,CAAeL,IAAf,CAA3C;AACA,qBAAK/B,OAAL,CAAaqC,eAAb,mBAAwCN,IAAI,CAACO,GAA7C;AACD,eAHD,MAGO;AACL,qBAAKtC,OAAL,CAAaqC,eAAb,CAA6B,0BAA0BN,IAAI,CAACO,GAA5D;AACD;AACF,aAPD,MAOO;AACL,mBAAKtC,OAAL,CAAaqC,eAAb,CAA6B,iBAAiBN,IAAI,CAACO,GAAnD;AACD;AACF;;;uCAEYC,U,EAAoB;AAC/B,mBAAO,kEAAaC,YAAb,CAA0BD,UAA1B,CAAP;AACD;;;oCAESzB,K,EAAO;AACf,gBAAI,KAAKN,MAAL,IAAe,CAAnB,EAAsB;AACpB,mBAAKJ,cAAL,GAAsB,CAAtB;AACA,mBAAKK,WAAL,CAAiB,KAAKL,cAAtB,EAAsC,KAAKE,kBAA3C,EAA+D,EAA/D,EAAmE,EAAnE,EAAuEQ,KAAvE,EAA8E,IAA9E;AACD,aAHD,MAGO;AACL,mBAAKT,eAAL,GAAuB,CAAvB;AACA,mBAAKI,WAAL,CAAiB,KAAKJ,eAAtB,EAAuC,KAAKC,kBAA5C,EAAgE,EAAhE,EAAoE,EAApE,EAAwEQ,KAAxE,EAA+E,IAA/E;AACD;AACF;;;iCAEMA,K,EAAO;AACZ,gBAAG,KAAKN,MAAL,IAAe,CAAlB,EAAqB;AACnB,mBAAKiC,OAAL,CAAaC,WAAb;AACD;;AACD,iBAAKlC,MAAL,GAAc,CAAd;;AACA,gBAAI,CAAC,KAAKN,eAAN,IAAyB,KAAKA,eAAL,CAAqByC,MAArB,IAA+B,CAA5D,EAA+D;AAC7D,mBAAKlC,WAAL,CAAiB,KAAKL,cAAtB,EAAsC,KAAKE,kBAA3C,EAA+D,EAA/D,EAAmE,EAAnE,EAAuE,IAAvE,EAA6E,IAA7E;AACD;AACF;;;gCAEKQ,K,EAAO;AACX,gBAAG,KAAKN,MAAL,IAAe,CAAlB,EAAqB;AACnB,mBAAKiC,OAAL,CAAaC,WAAb;AACD;;AACD,iBAAKlC,MAAL,GAAc,CAAd;;AACA,gBAAI,CAAC,KAAKL,gBAAN,IAA0B,KAAKA,gBAAL,CAAsBwC,MAAtB,IAAgC,CAA9D,EAAiE;AAC/D,mBAAKlC,WAAL,CAAiB,KAAKJ,eAAtB,EAAuC,KAAKC,kBAA5C,EAAgE,EAAhE,EAAoE,EAApE,EAAwE,IAAxE,EAA8E,IAA9E;AACD;AACF;;;;;;;yBA3HUT,gB,EAAgB,iJ,EAAA,qI,EAAA,6H,EAAA,gK;AAAA,O;;;cAAhBA,gB;AAAgB,yC;AAAA;AAAA;sEAChB,yD,EAAY,I;;;;;;;;;;;;;;ACfzB;;AACE;;AACE;;AAAqC;;;;AAA4B;;AACnE;;AACA;;AACE;;AAAwE;AAAA,qBAAS,IAAA+C,MAAA,QAAT;AAAuB,aAAvB;;AACtE;;AAAW;;;;AAA8B;;AAC3C;;AACA;;AAAyE;AAAA,qBAAS,IAAAC,KAAA,QAAT;AAAsB,aAAtB;;AACvE;;AAAW;;;;AAAsC;;AACnD;;AACF;;AACF;;AACA;;AACE;;AAA4B;AAAA,qBAAc,IAAAC,SAAA,QAAd;AAA+B,aAA/B;;AAC1B;;AACF;;AACA;;AAiBA;;AAeA;;AAA+D;AAAA,qBAAe,IAAAC,QAAA,QAAf;AAA+B,aAA/B;;AAC7D;;AACF;;AACA;;AACE;;AAEF;;AACF;;;;AAtDyC;;AAAA;;AAGH;;AAAA;;AACrB;;AAAA;;AAEsB;;AAAA;;AACtB;;AAAA;;AAQQ;;AAAA;;AAiBA;;AAAA;;;;;;;;;;wEDpBZlD,gB,EAAgB;gBAL5B,uDAK4B;iBALlB;AACTmD,oBAAQ,EAAE,kBADD;AAETC,uBAAW,EAAE,0BAFJ;AAGTC,qBAAS,EAAE,CAAC,0BAAD;AAHF,W;AAKkB,U;;;;;;;;;;;;kBAC1B,uD;mBAAU,yD,EAAY;AAAE,wBAAQ;AAAV,a","file":"notification-notification-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { NotificationPage } from './notification.page';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NotificationPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    TranslateModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [NotificationPage]\r\n})\r\nexport class NotificationPageModule {}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ApiService } from '../../services/api/api.service';\r\nimport { IonContent, NavController } from '@ionic/angular';\r\nimport { NativePageTransitions } from '@ionic-native/native-page-transitions/ngx';\r\nimport { LoadingService } from '../../services/loading/loading.service';\r\nimport { ConstService } from '../../utils/const.service';\r\nimport { UtilsService } from '../../utils/utils.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-notification',\r\n  templateUrl: './notification.page.html',\r\n  styleUrls: ['./notification.page.scss'],\r\n})\r\nexport class NotificationPage implements OnInit {\r\n  @ViewChild(IonContent, { static: false }) content: IonContent;\r\n  \r\n  listArticlesNew = [];\r\n  listArticlesNoti = [];\r\n  currentPageNew = 1;\r\n  currentPageNoti = 1;\r\n  isNews: number;\r\n  numberRecordOnPage = ConstService.NUMBER_RECORD_ON_PAGE;\r\n  getArticleSubscriber: Subscription;\r\n\r\n  constructor(\r\n    private loading: LoadingService,\r\n    private apiService: ApiService,\r\n    private navCtrl: NavController,\r\n    private nativePageTransitions: NativePageTransitions\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.isNews = 1;\r\n    this.getArticles(this.currentPageNew, this.numberRecordOnPage, '', '', null, true);\r\n  }\r\n\r\n  ionViewWillEnter() {}\r\n\r\n  getArticles(page: number, limit: number, category: string, search: string, event: any, isRefresh: boolean) {\r\n    const self = this;\r\n    if (this.getArticleSubscriber) {\r\n      this.getArticleSubscriber.unsubscribe();\r\n    }\r\n    this.loading.present();\r\n    if (this.isNews == 0) {\r\n      this.getArticleSubscriber = this.apiService.getListArticle(page, limit, category, search).subscribe(\r\n        (result) => {\r\n          if (isRefresh) {\r\n            self.listArticlesNoti = result.articles;\r\n          } else {\r\n            self.listArticlesNoti = self.listArticlesNoti.concat(result.articles);\r\n          }\r\n          if (event) {\r\n            event.target.complete();\r\n          }\r\n          self.loading.dismiss();\r\n        },\r\n        (error) => {\r\n          self.loading.dismiss();\r\n        }\r\n      );\r\n    } else {\r\n      this.getArticleSubscriber = this.apiService.getPosts(page, limit, category, search).subscribe(\r\n        (result) => {\r\n          if (isRefresh) {\r\n            self.listArticlesNew = result.posts;\r\n          } else {\r\n            self.listArticlesNew = self.listArticlesNew.concat(result.posts);\r\n          }\r\n          if (event) {\r\n            event.target.complete();\r\n          }\r\n          self.loading.dismiss();\r\n        },\r\n        (error) => {\r\n          self.loading.dismiss();\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  loadData(event) {\r\n    if (this.isNews == 1) {\r\n      this.currentPageNew++;\r\n      this.getArticles(this.currentPageNew, this.numberRecordOnPage, '', '', event, false);\r\n    } else {\r\n      this.currentPageNoti++;\r\n      this.getArticles(this.currentPageNoti, this.numberRecordOnPage, '', '', event, false);\r\n    }\r\n  }\r\n\r\n  detailPage(data) {\r\n    if (this.isNews == 0) {\r\n      if(data?.survey) {\r\n        localStorage.setItem('survey_data_stored', JSON.stringify(data));\r\n        this.navCtrl.navigateForward(`/survey/${data._id}`);\r\n      } else {\r\n        this.navCtrl.navigateForward('/notification-detail/' + data._id);\r\n      }\r\n    } else {\r\n      this.navCtrl.navigateForward('/new-detail/' + data._id);\r\n    }\r\n  }\r\n\r\n  formatString(stringDate: string) {\r\n    return UtilsService.formatString(stringDate);\r\n  }\r\n\r\n  doRefresh(event) {\r\n    if (this.isNews == 1) {\r\n      this.currentPageNew = 1;\r\n      this.getArticles(this.currentPageNew, this.numberRecordOnPage, '', '', event, true);\r\n    } else {\r\n      this.currentPageNoti = 1;\r\n      this.getArticles(this.currentPageNoti, this.numberRecordOnPage, '', '', event, true);\r\n    }\r\n  }\r\n\r\n  toNews(event) {\r\n    if(this.isNews != 1) {\r\n      this.content.scrollToTop();\r\n    }\r\n    this.isNews = 1;\r\n    if (!this.listArticlesNew || this.listArticlesNew.length == 0) {\r\n      this.getArticles(this.currentPageNew, this.numberRecordOnPage, '', '', null, true);\r\n    }\r\n  }\r\n\r\n  toNot(event) {\r\n    if(this.isNews != 0) {\r\n      this.content.scrollToTop();\r\n    }\r\n    this.isNews = 0;\r\n    if (!this.listArticlesNoti || this.listArticlesNoti.length == 0) {\r\n      this.getArticles(this.currentPageNoti, this.numberRecordOnPage, '', '', null, true);\r\n    }\r\n  }\r\n}\r\n","<ion-header class=\"page-header ion-no-border\">\r\n  <ion-toolbar color=\"#FFC144\" class=\"ion-toolbar-title\">\r\n    <ion-title class=\"page-header-title\">{{ 'NEWS.top' | translate }}</ion-title>\r\n  </ion-toolbar>\r\n  <div class=\"custum-tab\">\r\n    <div class=\"tab-btn tab-btn-left\" [class]=\"isNews == 1 ? 'active': '' \" (click)=\"toNews($event)\">\r\n      <ion-label>{{ 'NEWS.title' | translate }}</ion-label>\r\n    </div>\r\n    <div class=\"tab-btn tab-btn-right\" [class]=\"isNews != 1 ? 'active': '' \" (click)=\"toNot($event)\">\r\n      <ion-label>{{ 'NOTIFICATION.title' | translate }}</ion-label>\r\n    </div>\r\n  </div>\r\n</ion-header>\r\n<ion-content class=\"main-content\" >\r\n  <ion-refresher slot=\"fixed\" (ionRefresh)=\"doRefresh($event)\">\r\n    <ion-refresher-content pullingIcon=\"circles\" refreshingSpinner=\"\" refreshingText=\"\"></ion-refresher-content>\r\n  </ion-refresher>\r\n  <ion-list class=\"news\" *ngIf=\"isNews == 1\">\r\n    <ion-card class=\"info-card\" button *ngFor=\"let item of listArticlesNew\" (click)=\"detailPage(item)\" id=\"{{item._id}}\">\r\n      <div class=\"card-img\">\r\n        <ion-img *ngIf=\"item.thumbnail != null\" src=\"{{item.thumbnail}}\"></ion-img>\r\n        <ion-img *ngIf=\"item.thumbnail == null\" src=\"assets/common/no-thumbnail.png\"></ion-img>\r\n        <ion-label class=\"badge-corner badge-corner-base\">{{formatString(item.updatedAt)}}</ion-label>\r\n        <ion-label class=\"badge-corner-right badge-corner-icon hide\">\r\n          <ion-icon class=\"custom-pined\" name=\"custom-pined\" src=\"assets/icon/custom-pined.svg\"></ion-icon>\r\n        </ion-label>\r\n      </div>\r\n      <ion-item lines=\"none\">\r\n        <ion-card-title class=\"ion-text-wrap content-two-line content-title\">{{item.title}}</ion-card-title>\r\n      </ion-item>\r\n    </ion-card>\r\n  </ion-list>\r\n\r\n\r\n  <ion-list class=\"news\" *ngIf=\"isNews != 1\">\r\n    <ion-card class=\"info-card\" button *ngFor=\"let item of listArticlesNoti\" (click)=\"detailPage(item)\" id=\"{{item._id}}\">\r\n      <div class=\"card-img\">\r\n        <ion-img *ngIf=\"item.thumbnail != null\" src=\"{{item.thumbnail}}\"></ion-img>\r\n        <ion-img *ngIf=\"item.thumbnail == null\" src=\"assets/common/no-thumbnail.png\"></ion-img>\r\n        <ion-label class=\"badge-corner badge-corner-base\">{{formatString(item.updatedAt)}}</ion-label>\r\n        <ion-label class=\"badge-corner-right badge-corner-icon hide\">\r\n          <ion-icon class=\"custom-pined\" name=\"custom-pined\" src=\"assets/icon/custom-pined.svg\"></ion-icon>\r\n        </ion-label>\r\n      </div>\r\n      <ion-item lines=\"none\">\r\n        <ion-card-title class=\"ion-text-wrap content-two-line content-title\">{{item.title}}</ion-card-title>\r\n      </ion-item>\r\n    </ion-card>\r\n  </ion-list>\r\n  <ion-infinite-scroll class=\"infinite-scroll\" threshold=\"100px\" (ionInfinite)=\"loadData($event)\">\r\n    <ion-infinite-scroll-content loadingSpinner=\"\" loadingText=\"\"></ion-infinite-scroll-content>\r\n  </ion-infinite-scroll>\r\n  <div class=\"bottom-frame-wrapper\">\r\n    <div class=\"bottom-frame\">\r\n    </div>\r\n  </div>\r\n</ion-content>"]}