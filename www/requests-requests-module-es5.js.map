{"version":3,"sources":["webpack:///src/app/pages/requests/requests.module.ts","webpack:///src/app/pages/requests/requests.page.html","webpack:///src/app/pages/requests/requests.page.ts"],"names":["routes","path","component","RequestsPageModule","forChild","imports","declarations","RequestsPage","modalController","loading","apiService","navCtrl","platform","nativePageTransitions","route","router","modeService","isSettingRequestReceiver","isSettingRequestVisitors","isSettingRequestTranferGood","isSettingRequestParking","listRequestAll","listRequestNew","listRequestProcessing","listRequestCompleted","currentPageAll","currentPageNew","currentPageProcess","currentPageComplate","activeTabIndex","self","ready","then","readySource","heightScreen","height","heightScreenSub","numberRecordOnPage","NUMBER_RECORD_ON_PAGE","queryParams","subscribe","params","stateData","getCurrentNavigation","extras","state","isReload","doRefresh","setTimeout","element","document","getElementById","click","getListUserApartment","result","i","userApartments","length","campaign","settingRequestReceiver","settingRequestVisitors","settingRequestTranferGood","settingRequestParking","getListRequestRegister","page","limit","category","search","event","isRefresh","status","present","target","complete","dismiss","feedbacks","feedbacknews","pushDataRequest","error","data","push","$event","allApiRequest","navigateForward","currentTarget","id","stringDate","formatString","create","cssClass","modal","detail","index","isLoadMore","registrationNavigate","onTabChange","loadData","addRequest","selector","templateUrl","styleUrls"],"mappings":"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","file":"requests-requests-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SuperTabsModule } from '@ionic-super-tabs/angular';\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { RequestsPage } from './requests.page';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RequestsPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    TranslateModule,\r\n    SuperTabsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [RequestsPage]\r\n})\r\nexport class RequestsPageModule {}\r\n","<div class=\"request-background-color\">\r\n  <ion-header class=\"ion-no-border request-ion-header bar bar-header\">\r\n    <ion-label class=\"header-title\">{{ 'REQUEST.title' | translate }}</ion-label>\r\n  </ion-header>\r\n</div>\r\n\r\n<div class=\"request-category\">\r\n  <ion-grid>\r\n    <ion-row class=\"ion-align-items-center\">\r\n      <ion-col [ngClass]=\"!isSettingRequestReceiver ? 'item-icon-col disabled' : 'item-icon-col'\" (click)=\"registrationNavigate('/register-to-receive-goods')\">\r\n        <ion-badge class=\"item-icon-content\">\r\n          <img name=\"custom-archive\" class=\"item-icon\" src=\"assets/icon/request/delivery-box.svg\" />\r\n        </ion-badge>\r\n        <ion-label class=\"item-label\">{{ 'REGISTRATION_TYPE.receive' | translate }}</ion-label>\r\n      </ion-col>\r\n      <ion-col [ngClass]=\"!isSettingRequestVisitors ? 'item-icon-col disabled' : 'item-icon-col'\" (click)=\"registrationNavigate('/registration-guest')\">\r\n        <ion-badge class=\"item-icon-content\">\r\n          <img name=\"custom-archive\" class=\"item-icon\" src=\"assets/icon/request/user.svg\" />\r\n        </ion-badge>\r\n        <ion-label class=\"item-label\">{{ 'REGISTRATION_TYPE.guest' | translate }}</ion-label>\r\n      </ion-col>\r\n      <ion-col [ngClass]=\"!isSettingRequestTranferGood ? 'item-icon-col disabled' : 'item-icon-col'\" (click)=\"registrationNavigate('/register-for-shipping')\">\r\n        <ion-badge class=\"item-icon-content\">\r\n          <img name=\"custom-archive\" class=\"item-icon\" src=\"assets/icon/request/cart.svg\" />\r\n        </ion-badge>\r\n        <ion-label class=\"item-label\">{{ 'REGISTRATION_TYPE.shipping' | translate }}</ion-label>\r\n      </ion-col>\r\n      <ion-col [ngClass]=\"!isSettingRequestParking ? 'item-icon-col disabled' : 'item-icon-col'\" (click)=\"registrationNavigate('/register-keep-vehicle')\">\r\n        <ion-badge class=\"item-icon-content\" >\r\n          <img name=\"custom-archive\" class=\"item-icon\" src=\"assets/icon/request/sports-car.svg\" />\r\n        </ion-badge>\r\n        <ion-label class=\"item-label\">{{ 'REGISTRATION_TYPE.parking' | translate }}</ion-label>\r\n      </ion-col>\r\n    </ion-row>\r\n  </ion-grid>\r\n</div>\r\n<div class=\"super-tabs-div\">\r\n  <super-tabs\r\n    [activeTabIndex]=\"activeTabIndex\"\r\n    [config]=\"{ sideMenu: 'left', allowElementScroll: true, nativeSmoothScroll: true }\"\r\n    class=\"super-tabs-content request-background-color\"\r\n    (tabChange)=\"onTabChange($event)\"\r\n  >\r\n    <super-tabs-toolbar no-border class=\"segment-toolbar\" slot=\"top\" scrollable-padding=\"false\">\r\n      <super-tab-button class=\"request-super-tab-button\" id=\"tab_all\">\r\n        <ion-label class=\"super-tab-button-label\">{{ 'REQUEST.tab_all' | translate }}</ion-label>\r\n      </super-tab-button>\r\n      <super-tab-button class=\"request-super-tab-button\">\r\n        <ion-label class=\"super-tab-button-label\">{{ 'REQUEST.status_new' | translate }}</ion-label>\r\n      </super-tab-button>\r\n      <super-tab-button class=\"request-super-tab-button\">\r\n        <ion-label class=\"super-tab-button-label\">{{ 'REQUEST.status_processing' | translate }}</ion-label>\r\n      </super-tab-button>\r\n      <super-tab-button class=\"request-super-tab-button\">\r\n        <ion-label class=\"super-tab-button-label\">{{ 'REQUEST.status_done' | translate }}</ion-label>\r\n      </super-tab-button>\r\n    </super-tabs-toolbar>\r\n    <super-tabs-container>\r\n      <super-tab></super-tab>\r\n    </super-tabs-container>\r\n  </super-tabs>\r\n</div>\r\n\r\n<ion-content class=\"has-header request-background-color\">\r\n  <ion-refresher slot=\"fixed\" (ionRefresh)=\"doRefresh($event)\" pullMin=\"100\">\r\n    <ion-refresher-content pullingIcon=\"circles\" refreshingSpinner=\"\" refreshingText=\"\"></ion-refresher-content>\r\n  </ion-refresher>\r\n  <ion-list class=\"request-background-color\" *ngIf=\"activeTabIndex == 0\">\r\n    <ion-card *ngFor=\"let item of listRequestAll\" (click)=\"detailPage($event)\" id=\"{{item._id}}\" class=\"request-card\">\r\n      <ion-item lines=\"none\" class=\"request-card-item\">\r\n        <ion-label slot=\"start\" class=\"update-time\">{{formatString(item.updatedAt)}}</ion-label>\r\n        <ion-badge slot=\"end\" class=\"badge-status badge-danger\" *ngIf=\"item.status == 'new'\"\r\n          >{{ 'REQUEST.status_new' | translate }}</ion-badge\r\n        >\r\n        <ion-badge slot=\"end\" class=\"badge-status badge-warning\" *ngIf=\"item.status == 'processing'\"\r\n          >{{ 'REQUEST.status_processing' | translate }}</ion-badge\r\n        >\r\n        <ion-badge slot=\"end\" class=\"badge-status badge-success\" *ngIf=\"item.status == 'completed'\"\r\n          >{{ 'REQUEST.status_done' | translate }}</ion-badge\r\n        >\r\n        <ion-badge slot=\"end\" class=\"badge-status badge-cancel\" *ngIf=\"item.status == 'cancelled'\"\r\n          >{{ 'REQUEST.status_cancelled' | translate }}</ion-badge\r\n        >\r\n      </ion-item>\r\n      <ion-text class=\"\">\r\n        <p class=\"request-title\">{{item.title}}</p>\r\n      </ion-text>\r\n    </ion-card>\r\n  </ion-list>\r\n  <ion-list class=\"request-background-color\" *ngIf=\"activeTabIndex == 1\">\r\n    <ion-card *ngFor=\"let item of listRequestNew\" (click)=\"detailPage($event)\" id=\"{{item._id}}\" class=\"request-card\">\r\n      <ion-item lines=\"none\" class=\"request-card-item\">\r\n        <ion-label slot=\"start\" class=\"update-time\">{{formatString(item.updatedAt)}}</ion-label>\r\n        <ion-badge slot=\"end\" class=\"badge-status badge-danger\">{{'REQUEST.status_new' | translate }}</ion-badge>\r\n      </ion-item>\r\n      <ion-text class=\"\">\r\n        <p class=\"request-title\">{{item.title}}</p>\r\n      </ion-text>\r\n    </ion-card>\r\n  </ion-list>\r\n  <ion-list class=\"request-background-color\" *ngIf=\"activeTabIndex == 2\">\r\n    <ion-card *ngFor=\"let item of listRequestProcessing\" (click)=\"detailPage($event)\" id=\"{{item._id}}\" class=\"request-card\">\r\n      <ion-item lines=\"none\" class=\"request-card-item\">\r\n        <ion-label slot=\"start\" class=\"update-time\">{{formatString(item.updatedAt)}}</ion-label>\r\n        <ion-badge slot=\"end\" class=\"badge-status badge-warning\">{{'REQUEST.status_processing' | translate }} </ion-badge>\r\n      </ion-item>\r\n      <ion-text class=\"\">\r\n        <p class=\"request-title\">{{item.title}}</p>\r\n      </ion-text>\r\n    </ion-card>\r\n  </ion-list>\r\n  <ion-list class=\"request-background-color\" *ngIf=\"activeTabIndex == 3\">\r\n    <ion-card *ngFor=\"let item of listRequestCompleted\" (click)=\"detailPage($event)\" id=\"{{item._id}}\" class=\"request-card\">\r\n      <ion-item lines=\"none\" class=\"request-card-item\">\r\n        <ion-label slot=\"start\" class=\"update-time\">{{formatString(item.updatedAt)}}</ion-label>\r\n        <ion-badge slot=\"end\" class=\"badge-status badge-success\">{{'REQUEST.status_done' | translate }}</ion-badge>\r\n      </ion-item>\r\n      <ion-text class=\"\">\r\n        <p class=\"request-title\">{{item.title}}</p>\r\n      </ion-text>\r\n    </ion-card>\r\n  </ion-list>\r\n  <ion-infinite-scroll threshold=\"100px\" (ionInfinite)=\"loadData($event)\">\r\n    <ion-infinite-scroll-content loadingSpinner=\"\" loadingText=\"\"></ion-infinite-scroll-content>\r\n  </ion-infinite-scroll>\r\n  <div class=\"bottom-frame-wrapper\">\r\n    <div class=\"bottom-frame\"></div>\r\n  </div>\r\n</ion-content>\r\n<ion-toolbar class=\"toolbar-button\">\r\n  <ion-fab-button color=\"danger\" class=\"reflect-button\" (click)=\"addRequest()\">\r\n    <ion-icon name=\"custom-archive\" class=\"reflect-icon\" src=\"assets/icon/request/reflect.svg\"></ion-icon>\r\n  </ion-fab-button>\r\n  <ion-label class=\"reflect-label\">{{ 'REQUEST.reflect_lable' | translate }}</ion-label>\r\n</ion-toolbar>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Platform, NavController } from '@ionic/angular';\r\nimport { ApiService } from '../../services/api/api.service';\r\nimport { NativePageTransitions, NativeTransitionOptions } from '@ionic-native/native-page-transitions/ngx';\r\nimport { ConstService } from '../../utils/const.service';\r\nimport { UtilsService } from '../../utils/utils.service';\r\nimport { LoadingService } from '../../services/loading/loading.service';\r\nimport { Subscription } from 'rxjs';\r\nimport { ModalController } from '@ionic/angular';\r\n\r\nimport { PopupRegistrationTypePage } from '../popup-registration-type/popup-registration-type.page';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-requests',\r\n  templateUrl: './requests.page.html',\r\n  styleUrls: ['./requests.page.scss'],\r\n})\r\nexport class RequestsPage implements OnInit {\r\n  modeService: string = 'All';\r\n  // listApartment = [];\r\n  isSettingRequestReceiver = false;\r\n  isSettingRequestVisitors = false;\r\n  isSettingRequestTranferGood = false;\r\n  isSettingRequestParking = false;\r\n  listRequestAll = [];\r\n  listRequestNew = [];\r\n  listRequestProcessing = [];\r\n  listRequestCompleted = [];\r\n  currentPageAll = 1;\r\n  currentPageNew = 1;\r\n  currentPageProcess = 1;\r\n  currentPageComplate = 1;\r\n\r\n  numberRecordOnPage: number;\r\n  heightScreen: number;\r\n  heightScreenSub: number;\r\n  activeTabIndex = 0;\r\n\r\n  constructor(\r\n    public modalController: ModalController,\r\n    private loading: LoadingService,\r\n    private apiService: ApiService,\r\n    private navCtrl: NavController,\r\n    private platform: Platform,\r\n    private nativePageTransitions: NativePageTransitions,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {\r\n    const self = this;\r\n    platform.ready().then((readySource) => {\r\n      self.heightScreen = platform.height() - 120 - 90;\r\n      self.heightScreenSub = self.heightScreen;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    var self = this;\r\n    this.modeService = 'All';\r\n    this.numberRecordOnPage = ConstService.NUMBER_RECORD_ON_PAGE;\r\n    this.route.queryParams.subscribe((params) => {\r\n      const stateData = this.router.getCurrentNavigation().extras.state;\r\n      if(stateData && stateData.isReload) {\r\n        self.activeTabIndex = 0;\r\n        self.doRefresh(null);\r\n        setTimeout(() => {\r\n          let element: HTMLElement = document.getElementById('tab_all') as HTMLElement;\r\n          if(element){\r\n            element.click();\r\n          }\r\n        });\r\n      } else {\r\n        self.apiService.getListUserApartment().subscribe(\r\n          (result) => {\r\n            for(var i=0;i<result.userApartments.length;i++){\r\n              if(result.userApartments[i].campaign.settingRequestReceiver == \"active\"){\r\n                self.isSettingRequestReceiver = true;\r\n              }\r\n              if(result.userApartments[i].campaign.settingRequestVisitors == \"active\"){\r\n                self.isSettingRequestVisitors = true;\r\n              }\r\n              if(result.userApartments[i].campaign.settingRequestTranferGood == \"active\"){\r\n                self.isSettingRequestTranferGood = true;\r\n              }\r\n              if(result.userApartments[i].campaign.settingRequestParking == \"active\"){\r\n                self.isSettingRequestParking = true;\r\n              }\r\n            }\r\n            self.getListRequestRegister(self.currentPageAll, self.numberRecordOnPage, '', '', null, true); \r\n        });\r\n        \r\n      }\r\n    });\r\n    \r\n  }\r\n\r\n  ionViewWillEnter() {}\r\n\r\n  getListRequestRegister(page: number, limit: number, category: string, search: string, event: any, isRefresh: boolean, status: string = '') {\r\n    const self = this;\r\n    this.loading.present();\r\n    if (event) {\r\n      event.target.complete();\r\n    }\r\n    this.apiService.getListRequestRegister(page, limit, category, search, status).subscribe(\r\n      (result) => {\r\n        self.loading.dismiss();\r\n        const feedbacks = result.feedbacknews;\r\n        this.pushDataRequest(feedbacks, isRefresh);\r\n      },\r\n      (error) => {\r\n        self.loading.dismiss();\r\n      },\r\n      () => {\r\n        self.loading.dismiss();\r\n        if (event) {\r\n          event.target.complete();\r\n        }\r\n      }\r\n    );\r\n  }\r\n  pushDataRequest(data, isRefresh) {\r\n    switch (this.activeTabIndex) {\r\n      case 1:\r\n        if (isRefresh) {\r\n          this.listRequestNew = data;\r\n        } else {\r\n          this.listRequestNew.push(...data);\r\n        }\r\n        break;\r\n      case 2:\r\n        if (isRefresh) {\r\n          this.listRequestProcessing = data;\r\n        } else {\r\n          this.listRequestProcessing.push(...data);\r\n        }\r\n        break;\r\n      case 3:\r\n        if (isRefresh) {\r\n          this.listRequestCompleted = data;\r\n        } else {\r\n          this.listRequestCompleted.push(...data);\r\n        }\r\n        break;\r\n      default:\r\n        if (isRefresh) {\r\n          this.listRequestAll = data;\r\n        } else {\r\n          this.listRequestAll.push(...data);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  loadData($event) {\r\n    this.allApiRequest($event, true);\r\n  }\r\n\r\n  detailPage(event) {\r\n    this.navCtrl.navigateForward('/request-detail/' + event.currentTarget.id);\r\n  }\r\n\r\n  detailRegisterPage(event) {\r\n    this.navCtrl.navigateForward('/request-register-detail/' + event.currentTarget.id);\r\n  }\r\n\r\n  addRequest() {\r\n    this.navCtrl.navigateForward('/add-request');\r\n  }\r\n\r\n  formatString(stringDate: string) {\r\n    return UtilsService.formatString(stringDate);\r\n  }\r\n\r\n  doRefresh(event) {\r\n    this.listRequestAll = [];\r\n    this.listRequestNew = [];\r\n    this.listRequestProcessing = [];\r\n    this.listRequestCompleted = [];\r\n    this.currentPageAll = 1;\r\n    this.currentPageNew = 1;\r\n    this.currentPageProcess = 1;\r\n    this.currentPageComplate = 1;\r\n    this.allApiRequest(event, false);\r\n  }\r\n\r\n  async registrationTypeModal() {\r\n    const modal = await this.modalController.create({\r\n      component: PopupRegistrationTypePage,\r\n      cssClass: 'popupRegistrationType-page-custom',\r\n    });\r\n    return await modal.present();\r\n  }\r\n\r\n  registrationNavigate(route: string) {\r\n    this.navCtrl.navigateForward(route);\r\n  }\r\n\r\n  onTabChange($event) {\r\n    this.activeTabIndex = $event.detail.index;\r\n    this.allApiRequest(null);\r\n  }\r\n\r\n  allApiRequest(event, isLoadMore = false) {\r\n    switch (this.activeTabIndex) {\r\n      case 1:\r\n        if (!isLoadMore && this.listRequestNew.length == 0) {\r\n          this.getListRequestRegister(this.currentPageNew, this.numberRecordOnPage, '', '', event, false, 'new');\r\n        } else if (isLoadMore) {\r\n          this.currentPageNew++;\r\n          this.getListRequestRegister(this.currentPageNew, this.numberRecordOnPage, '', '', event, false, 'new');\r\n        }\r\n        break;\r\n      case 2:\r\n        if (!isLoadMore && this.listRequestProcessing.length == 0) {\r\n          this.getListRequestRegister(this.currentPageProcess, this.numberRecordOnPage, '', '', event, false, 'processing');\r\n        } else if (isLoadMore) {\r\n          this.currentPageProcess++;\r\n          this.getListRequestRegister(this.currentPageProcess, this.numberRecordOnPage, '', '', event, false, 'processing');\r\n        }\r\n        break;\r\n      case 3:\r\n        if (!isLoadMore && this.listRequestCompleted.length == 0) {\r\n          this.getListRequestRegister(this.currentPageComplate, this.numberRecordOnPage, '', '', event, false, 'completed');\r\n        } else if (isLoadMore) {\r\n          this.currentPageComplate++;\r\n          this.getListRequestRegister(this.currentPageComplate, this.numberRecordOnPage, '', '', event, false, 'completed');\r\n        }\r\n        break;\r\n      default:\r\n        if (!isLoadMore && this.listRequestAll.length == 0) {\r\n          this.getListRequestRegister(this.currentPageAll, this.numberRecordOnPage, '', '', event, false);\r\n        } else if (isLoadMore) {\r\n          this.currentPageAll++;\r\n          this.getListRequestRegister(this.currentPageAll, this.numberRecordOnPage, '', '', event, false);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n}\r\n"]}