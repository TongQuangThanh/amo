{"version":3,"sources":["webpack:///src/app/pages/auth/login/login.page.ts","webpack:///src/app/pages/auth/login/login.page.html","webpack:///src/app/components/mask.ts","webpack:///src/app/pages/auth/login/login.module.ts"],"names":["LoginPage","authService","navCtrl","route","loading","apiService","showPassword","password_type","passwordToggleIcon","localStorage","removeItem","phone","snapshot","paramMap","get","length","password","self","present","navigateRoot","navigateForward","togglePassword","login","changeToForgotPass","selector","templateUrl","styleUrls","Mask","model","maskPattern","dividers","replace","split","push","generatePattern","event","modelValue","getModelValue","stringToFormat","padString","viewValue","format","writeValue","target","value","patternString","placeHolderCounts","match","i","s","formattedString","charAt","pad","substring","indexOf","host","providers","routes","path","component","LoginPageModule","forChild","imports","declarations"],"mappings":"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","file":"pages-auth-login-login-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { NavController } from '@ionic/angular';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { AuthService } from 'src/app/services/auth/auth.service';\r\nimport { LoadingService } from '../../../services/loading/loading.service';\r\nimport { ApiService } from '../../../services/api/api.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit {\r\n\r\n  phone: string;\r\n  password: string;\r\n  errorMessage:string;\r\n  showPassword = false;\r\n  password_type: string = 'password';\r\n  passwordToggleIcon = 'eye-off-outline';\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private navCtrl: NavController,\r\n    private route: ActivatedRoute,\r\n    private loading: LoadingService,\r\n    private apiService: ApiService,\r\n  ) { \r\n  }\r\n  \r\n  togglePassword(): void {\r\n    //this.showPassword != this.showPassword;\r\n    this.password_type = this.password_type === 'text' ? 'password' : 'text';\r\n    if (this.passwordToggleIcon == 'eye-outline') {\r\n      this.passwordToggleIcon = 'eye-off-outline';\r\n    } else {\r\n      this.passwordToggleIcon = 'eye-outline';\r\n    }\r\n  }\r\n  ngOnInit() {\r\n    localStorage.removeItem('token');\r\n    // this.route.queryParams.subscribe(params => {\r\n    //   this.phone = params.phoneNumber;\r\n    // });\r\n    this.phone = this.route.snapshot.paramMap.get('phone');\r\n  }\r\n\r\n  checkIsEnabled() {\r\n    if (this.phone && this.phone.length >= 8 && this.password && this.password.length >= 8) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  login() {\r\n    var self = this;\r\n    this.loading.present();\r\n    this.navCtrl.navigateRoot('/dashboard/home');\r\n    // this.authService.login(this.phone, this.password).subscribe(\r\n    //   data => {\r\n    //    if (data) {\r\n    //     self.errorMessage = '';\r\n    //     var userId = localStorage.getItem('playID');\r\n    //     if(userId && userId.length > 0){\r\n    //       self.apiService.settingNotification({\r\n    //         playerId: userId\r\n    //       }).subscribe(result => {\r\n    //         console.log(\"done \" + userId)\r\n    //       })\r\n    //     }\r\n    //     this.navCtrl.navigateRoot('/dashboard/home');\r\n    //    }\r\n    //   },\r\n    //   (error:any) => {\r\n    //     self.errorMessage = error.error.message;\r\n    //     self.loading.dismiss();\r\n    //   },\r\n    //   () => {\r\n    //     self.loading.dismiss();\r\n    //   }\r\n    // );\r\n  }\r\n\r\n  changeToForgotPass(){\r\n    this.navCtrl.navigateForward('/forgot-password');\r\n  }\r\n}\r\n","<ion-header class=\"ion-no-border\">\r\n  <div class=\"login-header\">\r\n    <ion-label class=\"login-title\">{{ 'LOGIN.title' | translate }}</ion-label>\r\n  </div>\r\n</ion-header>\r\n\r\n<ion-content class=\"ion-padding\">\r\n  <div class=\"login-input\">\r\n    <ion-item class=\"input-item\" lines=\"none\">\r\n      <ion-icon class=\"input-icon\" name=\"custom-mobile\" src=\"/assets/icon/svg/profile.svg\" slot=\"start\"></ion-icon>\r\n      <ion-label class=\"input-floating-label\" position=\"floating\">{{ 'LOGIN.placeholder_phone' | translate }}</ion-label>\r\n      <ion-input class=\"input-text\" [(ngModel)]=\"phone\" type=\"tel\" name=\"phone\"></ion-input>\r\n      <!-- <ion-icon class=\"clear-input check-default\" name=\"close-circle\" slot=\"end\"></ion-icon> -->\r\n      \r\n    </ion-item>\r\n    <ion-item class=\"input-item input-password\" lines=\"none\">\r\n      <ion-icon class=\"input-icon\" name=\"custom-locker\" src=\"/assets/icon/custom-locker.svg\" slot=\"start\"></ion-icon>\r\n      <ion-label class=\"input-floating-label\" position=\"floating\">{{ 'LOGIN.placeholder_pass' | translate }}</ion-label>\r\n      <ion-input class=\"input-text\" [type]=\"password_type\" [(ngModel)]=\"password\" name=\"password\"></ion-input>\r\n      <!-- <ion-icon class=\"clear-input check-default\" name=\"close-circle\" slot=\"end\"></ion-icon> -->\r\n      <ion-icon class=\"pass-hide-icon\" slot=\"end\" [name]=\"passwordToggleIcon\" (click)=\"togglePassword()\"></ion-icon>\r\n    </ion-item>\r\n    <ion-item lines=\"none\" class=\"ion-text-center\"> \r\n      <ion-label color=\"danger\" class=\"ion-text-wrap\" *ngIf=\"errorMessage\">{{errorMessage}}</ion-label>\r\n    </ion-item>\r\n  </div>\r\n  <ion-toolbar class=\"bottom-toolbar clear-background\">\r\n    <ion-button (click)=\"login()\" expand=\"block\" class=\"\" [ngClass]=\"!checkIsEnabled() ? 'button-common login-button' : 'button-common login-button button-common-active'\" [disabled]=\"!checkIsEnabled()\">\r\n      <ion-label>{{ 'LOGIN.button_login_label' | translate }}</ion-label>\r\n    </ion-button>\r\n    <ion-button expand=\"block\" class=\"button-skip\" (click)=\"changeToForgotPass()\" routerDirection=\"forward\">\r\n        <ion-label class=\"button-skip-label\">{{ 'LOGIN.forgot_pass_label' | translate }}</ion-label>\r\n    </ion-button>\r\n  </ion-toolbar>\r\n  \r\n</ion-content>","import { Directive, Attribute } from '@angular/core';\r\nimport { NgModel } from '@angular/forms';\r\n@Directive({\r\n    selector: '[mask]',\r\n    host: {\r\n        '(keyup)': 'onInputChange($event)'\r\n    },\r\n    providers: [NgModel]\r\n})\r\nexport class Mask {\r\n    maskPattern: string;\r\n    placeHolderCounts: number;\r\n    dividers: string[];\r\n    modelValue: string;\r\n    viewValue: string;\r\n\r\n    constructor(\r\n        public model: NgModel,\r\n        @Attribute(\"mask\") maskPattern: string\r\n    ) {\r\n        this.dividers = maskPattern.replace(/\\*/g, \"\").split(\"\");\r\n        this.dividers.push(\" \");\r\n        this.generatePattern(maskPattern);\r\n    }\r\n\r\n    onInputChange(event) {\r\n        this.modelValue = this.getModelValue(event);\r\n        let stringToFormat = this.modelValue;\r\n        if (stringToFormat.length < 10) {\r\n            stringToFormat = this.padString(stringToFormat);\r\n        }\r\n\r\n        this.viewValue = this.format(stringToFormat);\r\n        this.writeValue(event.target, this.viewValue);\r\n    }\r\n\r\n    writeValue(target, value) {\r\n        return target.value = value;\r\n    }\r\n\r\n    generatePattern(patternString) {\r\n        this.placeHolderCounts = (patternString.match(/\\*/g) || []).length;\r\n        for (let i = 0; i < this.placeHolderCounts; i++) {\r\n            patternString = patternString.replace('*', \"{\" + i + \"}\");\r\n        }\r\n        this.maskPattern = patternString;\r\n    }\r\n\r\n    format(s) {\r\n        var formattedString = this.maskPattern;\r\n        for (let i = 0; i < this.placeHolderCounts; i++) {\r\n            formattedString = formattedString.replace(\"{\" + i + \"}\", s.charAt(i));\r\n        }\r\n        return formattedString;\r\n    }\r\n\r\n    padString(s) {\r\n        var pad = \"          \";\r\n        return (s + pad).substring(0, pad.length);\r\n    }\r\n\r\n    getModelValue(event) {\r\n        var modelValue = event.target.value;\r\n        for (var i = 0; i < this.dividers.length; i++) {\r\n            while (modelValue.indexOf(this.dividers[i]) > -1) {\r\n                modelValue = modelValue.replace(this.dividers[i], \"\");\r\n            }\r\n        }\r\n        return modelValue;\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { LoginPage } from './login.page';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\n// import { RegisterPage } from '../register/register.page';\r\nimport { Mask } from '../../../components/mask';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    TranslateModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [\r\n    Mask,\r\n    LoginPage\r\n  ],\r\n})\r\nexport class LoginPageModule {}\r\n"]}