{"version":3,"sources":["webpack:///src/app/pages/payment-confirm/payment-confirm.page.html","webpack:///src/app/pages/payment-confirm/payment-confirm.page.ts","webpack:///src/app/pages/payment-confirm/payment-confirm.module.ts"],"names":["PaymentConfirmPage","modalController","loading","apiService","navCtrl","route","translate","alertController","iab","paymentMethodList","paymentType","paymentUpdateAt","paymentCategory","paymentSelected","epayUserInfo","promotionMoney","paymentID","snapshot","paramMap","get","listPaymentContent","getPaymentDetail","self","present","subscribe","result","totalCash","paymentBill","total","paidAmount","titlePage","payment","title","paymentStartAt","category","paymentEndAt","content","paymentStatus","status","updatedAt","today","Date","endAt","dismiss","error","stringValue","n","parseInt","toFixed","replace","c","i","a","length","textInput","navigateForward","create","component","componentProps","paymentCate","modalChangePayemt","onDidDismiss","then","data","confirm","payTheBillOnlineOrCash","popupPaymentSuccessPage","urlPayment","modalPay","JSON","parse","params","bill","type","bank","amount","note","postPayTheBill","paymentSuccessShow","changePaymentModal","momoPayment","resultCode","openURLAccuracyEpay","deeplink","url","browser","show","message","cssClass","header","instant","buttons","alert","selector","templateUrl","styleUrls","routes","path","PaymentConfirmPageModule","forChild","imports","declarations"],"mappings":"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","file":"pages-payment-confirm-payment-confirm-module-es5.js","sourcesContent":["<ion-header class=\"ion-no-border payment-confirm-header\">\r\n  <ion-buttons class=\"back-button\">\r\n    <ion-back-button color=\"light\" text=\"\" icon=\"chevron-back\" class=\"ion-back-button\"></ion-back-button>\r\n  </ion-buttons>\r\n  <ion-label class=\"header-title\">{{ 'PAYMENT_INFOR.payment_confirm_title' | translate }}</ion-label>\r\n  <ion-label class=\"header-sub-title\">{{ 'PAYMENT_INFOR.payment_confirm_sub_title' | translate }}</ion-label>\r\n</ion-header>\r\n\r\n<ion-content class=\"payment-confirm-content\">\r\n  <ion-label class=\"confirm_detail_title\">{{ 'PAYMENT_INFOR.payment_confirm_detail_title' | translate }}</ion-label>\r\n  <section class=\"section-content margin-top-10\">\r\n    <ion-item lines=\"none\" class=\"fee-item confirm-bill-title\">\r\n      <ion-text>{{titlePage}}</ion-text>\r\n    </ion-item>\r\n    <div class=\"devider-line-confirm-item\"></div>\r\n\r\n    <ion-list *ngFor=\"let item of listPaymentContent; let i = index;\" class=\"section-content-fee\">\r\n      <ion-item lines=\"none\" class=\"fee-item ion-no-padding\">\r\n        <ion-icon [src]=\"'../assets/icon/payment/bag.svg'\" class=\"icon-parking\"></ion-icon>\r\n        <ion-label class=\"fee-title\">{{item.type.title}}</ion-label>\r\n        <ion-label class=\"amount-number ion-float-right\">{{formatMoney(item.amount)}} </ion-label>\r\n      </ion-item>\r\n      <ion-item lines=\"none\" class=\"item-fee-detail ion-no-padding\">\r\n        <p [innerHTML]=\"convertText(item.description)\" class=\"fee-detail\"></p>\r\n      </ion-item>\r\n      <div class=\"devider-line-confirm-item\"></div>\r\n    </ion-list>\r\n    <ion-list class=\"section-content-fee\">\r\n      <ion-item lines=\"none\" class=\"fee-item ion-no-padding\">\r\n        <ion-label class=\"fee-detail\">{{\"PAYMENT_INFOR.payment_confirm_amount\" | translate}}</ion-label>\r\n        <ion-label class=\"amount-number-total ion-float-right\">{{formatMoney(totalCash)}}đ </ion-label>\r\n      </ion-item>\r\n      <ion-item lines=\"none\" class=\"fee-item ion-no-padding\">\r\n        <ion-label class=\"fee-detail\">{{\"PAYMENT_INFOR.payment_confirm_promotion\" | translate}}</ion-label>\r\n        <ion-label class=\"promotion-value ion-float-right\">{{formatMoney(promotionMoney)}}đ </ion-label>\r\n      </ion-item>\r\n      <ion-item lines=\"none\" class=\"fee-item ion-no-padding\">\r\n        <ion-label class=\"fee-detail\">{{\"PAYMENT_INFOR.payment_paidAmount\" | translate}}</ion-label>\r\n        <ion-label class=\"promotion-value ion-float-right\">{{formatMoney(paidAmount)}}đ </ion-label>\r\n      </ion-item>\r\n      <div class=\"devider-line-confirm-item\"></div>\r\n      <ion-item lines=\"none\" class=\"fee-item ion-no-padding\">\r\n        <ion-label class=\"fee-detail\">{{\"PAYMENT_INFOR.payment_confirm_total\" | translate}}</ion-label>\r\n        <ion-label class=\"amount-number ion-float-right\">{{formatMoney(totalCash - promotionMoney - paidAmount)}}đ </ion-label>\r\n      </ion-item>\r\n    </ion-list>\r\n  </section>\r\n  <section class=\"section-content margin-top-10\">\r\n    <ion-item lines=\"none\" class=\"fee-item ion-no-padding\" style=\"margin: 0 15px; \">\r\n      <ion-icon [src]=\"'../assets/icon/payment/credit-card.svg'\" class=\"icon-parking\"></ion-icon>\r\n      <ion-label class=\"fee-title\">{{ 'PAYMENT_INFOR.payment_method' | translate }}</ion-label>\r\n    </ion-item>\r\n    <ion-radio-group [(ngModel)]=\"paymentType\">\r\n      <ion-item>\r\n        <ion-label class=\"fee-title\">{{ 'PAYMENT_INFOR.payment_cash' | translate }}</ion-label>\r\n        <ion-radio slot=\"start\" color=\"success\" value=\"payment_cash\"></ion-radio>\r\n      </ion-item>\r\n      <ion-item>\r\n        <ion-label class=\"fee-title\">{{ 'PAYMENT_INFOR.payment_transfer' | translate }}</ion-label>\r\n        <ion-radio slot=\"start\" color=\"success\" value=\"payment_transfer\"></ion-radio>\r\n      </ion-item>\r\n      <ion-item disabled=\"disabled\">\r\n        <ion-label class=\"fee-title\">{{ 'PAYMENT_INFOR.payment_online' | translate }}</ion-label>\r\n        <ion-radio slot=\"start\" color=\"success\" value=\"payment_online\"></ion-radio>\r\n      </ion-item>\r\n    </ion-radio-group>\r\n  </section>\r\n  <ion-toolbar class=\"ion-toolbar-payment\">\r\n    <ion-button class=\"amo-button btn-default\" (click)=\"openPayment()\" *ngIf=\"(totalCash - promotionMoney - paidAmount) > 0\">{{'PAYMENT_INFOR.pay_now' | translate }}</ion-button>\r\n  </ion-toolbar>\r\n  <!-- <ion-toolbar class=\"ion-toolbar-payment\">\r\n    <ion-item lines=\"none\" class=\"payment-funtion\" *ngIf=\"paymentSelected\">\r\n      <ion-icon [src]=\"'../assets/icon/payment/wallet.svg'\" class=\"wallet-icon\"></ion-icon>\r\n      <ion-label class=\"wallet-title\">{{paymentSelected.name}}</ion-label>\r\n      <ion-text class=\"wallet-money\">\r\n        {{paymentSelected.content}}\r\n        <span *ngIf=\"paymentSelected.money && paymentSelected.money < totalCash\" class=\"money-insufficient\">- {{'PAYMENT_INFOR.payment_wallet_insufficient'| translate }}</span>\r\n      </ion-text>\r\n      <ion-label class=\"wallet-change\" (click)=\"changePaymentModal()\">{{\"PAYMENT_INFOR.payment_wallet_change\" | translate}}</ion-label>\r\n    </ion-item>\r\n    <ion-item lines=\"none\" class=\"payment-funtion\" *ngIf=\"!paymentSelected\">\r\n      <ion-icon [src]=\"'../assets/icon/payment/wallet.svg'\" class=\"wallet-icon\"></ion-icon>\r\n      <ion-label class=\"wallet-title\">{{\"PAYMENT_INFOR.payment_wallet_title\" | translate}}</ion-label>\r\n      <ion-text class=\"wallet-money\">\r\n        {{\"PAYMENT_INFOR.payment_wallet_not_register\" | translate}}\r\n      </ion-text>\r\n      <ion-label class=\"wallet-change\" (click)=\"changePaymentModal()\">{{\"PAYMENT_INFOR.payment_wallet_change\" | translate}}</ion-label>\r\n    </ion-item>\r\n    <ion-button class=\"amo-button btn-default\" (click)=\"openPayment()\" *ngIf=\"paymentSelected && paymentSelected.money >= (totalCash - promotionMoney)\">{{'PAYMENT_INFOR.pay_now' | translate }}</ion-button>\r\n    <ion-button class=\"btn-default btn-pay-not-active\" *ngIf=\"!paymentSelected || paymentSelected.money < (totalCash - promotionMoney)\">{{'PAYMENT_INFOR.pay_now' | translate }}</ion-button>\r\n  </ion-toolbar> -->\r\n</ion-content>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from '../../services/api/api.service';\r\nimport { AlertController, NavController } from '@ionic/angular';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { LoadingService } from '../../services/loading/loading.service';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { PopupPaymentFunctionPage } from '../popup-payment-function/popup-payment-function.page';\r\nimport { PopupPaymentSuccessPage } from '../popup-payment-success/popup-payment-success.page';\r\nimport { PopupIframePaymentPage } from '../popup-iframe-payment/popup-iframe-payment.page';\r\nimport { InAppBrowser } from '@ionic-native/in-app-browser/ngx';\r\n\r\n@Component({\r\n  selector: 'app-payment-confirm',\r\n  templateUrl: './payment-confirm.page.html',\r\n  styleUrls: ['./payment-confirm.page.scss'],\r\n})\r\nexport class PaymentConfirmPage implements OnInit {\r\n  paymentMethodList = [];\r\n  titlePage: string;\r\n  totalCash: number;\r\n  paidAmount: number;\r\n  listPaymentContent: any;\r\n  paymentStartAt: string;\r\n  paymentEndAt: string;\r\n  paymentID: string;\r\n  paymentStatus: any;\r\n  paymentType: any = \"payment_cash\";\r\n  paymentUpdateAt = '';\r\n  paymentCategory = null;\r\n  paymentSelected = null;\r\n  epayUserInfo = null;\r\n  promotionMoney = 0;\r\n  urlPayment: any;\r\n\r\n  constructor(\r\n    public modalController: ModalController,\r\n    private loading: LoadingService,\r\n    public apiService: ApiService,\r\n    private navCtrl: NavController,\r\n    private route: ActivatedRoute,\r\n    private translate: TranslateService,\r\n    private alertController: AlertController,\r\n    private iab: InAppBrowser\r\n  ) {}\r\n  ngOnInit() {\r\n    // this.epayUserInfo = this.apiService.getEpayUserStored();\r\n    this.paymentID = this.route.snapshot.paramMap.get('id');\r\n    this.listPaymentContent = [];\r\n    this.paymentType = 'payment_cash';\r\n    this.getPaymentDetail(this.paymentID);\r\n    // this.dumyPaymentMethod();\r\n  }\r\n\r\n  getPaymentDetail(paymentID: string) {\r\n    const self = this;\r\n    this.loading.present();\r\n    this.apiService.getPaymentDetail(paymentID).subscribe(\r\n      (result) => {\r\n        self.totalCash = result.paymentBill.total;\r\n        self.paidAmount = result.paymentBill.paidAmount;\r\n        self.titlePage = result.paymentBill.payment.title;\r\n        self.paymentStartAt = result.paymentBill.payment.paymentStartAt;\r\n        self.paymentCategory = result.paymentBill.category;\r\n        self.paymentEndAt = result.paymentBill.payment.paymentEndAt;\r\n        self.listPaymentContent = result.paymentBill.content;\r\n        self.paymentStatus = result.paymentBill.status;\r\n        this.paymentUpdateAt = result.paymentBill.updatedAt;\r\n        let today = new Date();\r\n        let endAt = new Date(result.paymentBill.payment.paymentEndAt);\r\n        if (today > endAt && self.paymentStatus == 'publish') {\r\n          self.paymentStatus = 'outdate';\r\n        }\r\n        self.loading.dismiss();\r\n      },\r\n      (error) => {\r\n        self.loading.dismiss();\r\n      }\r\n    );\r\n  }\r\n\r\n  formatMoney(stringValue) {\r\n    let n = parseInt(stringValue);\r\n    return n.toFixed(0).replace(/./g, function (c, i, a) {\r\n      return i > 0 && c !== ',' && (a.length - i) % 3 === 0 ? '.' + c : c;\r\n    });\r\n  }\r\n\r\n  convertText(textInput: string) {\r\n    if (textInput && textInput.length > 0) {\r\n      return textInput.replace(/\\n/gi, '<br/>');\r\n    } else {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  showListComment() {\r\n    this.navCtrl.navigateForward('/payment-comment/' + this.paymentID);\r\n  }\r\n\r\n  async changePaymentModal(paymentType) {\r\n    const self = this;\r\n    const modalChangePayemt = await this.modalController.create({\r\n      component: PopupPaymentFunctionPage,\r\n      componentProps: {\r\n        paymentCate: this.paymentCategory,\r\n        paymentMethodList: this.paymentMethodList,\r\n        paymentType: paymentType\r\n      },\r\n    });\r\n    modalChangePayemt.onDidDismiss().then((result: any) => {\r\n      if (result && result.data && result.data.confirm) {\r\n        // self.paymentSelected = result.data.paymentSelected;\r\n        self.payTheBillOnlineOrCash(result.data.paymentSelected);\r\n      }\r\n    });\r\n    return await modalChangePayemt.present();\r\n  }\r\n\r\n  async paymentSuccessShow() {\r\n    const self = this;\r\n    const popupPaymentSuccessPage = await this.modalController.create({\r\n      component: PopupPaymentSuccessPage,\r\n      componentProps: {\r\n      },\r\n    });\r\n    return await popupPaymentSuccessPage.present();\r\n  }\r\n  \r\n\r\n  async payTheBill() {\r\n    const modalPay = await this.modalController.create({\r\n      component: PopupIframePaymentPage,\r\n      componentProps: {\r\n        paymentID: this.paymentID, \r\n        totalCash: this.totalCash, \r\n        titlePage: this.titlePage, \r\n        promotionMoney: this.promotionMoney,\r\n        urlPayment: this.urlPayment\r\n      },\r\n    });\r\n    modalPay.onDidDismiss().then((result: any) => {\r\n      const data = JSON.parse(result.data || '');\r\n      if (!data || data.result == 1) {\r\n        // this.navCtrl.navigateForward('/payment-fail');\r\n        return;\r\n      }\r\n      // this.navCtrl.navigateForward('/payment-success');\r\n    });\r\n    return await modalPay.present();\r\n  }\r\n\r\n  payTheBillOnlineOrCash(paymentSelected) {\r\n    this.loading.present();\r\n    const self = this;\r\n    const params = {\r\n      bill: this.paymentID,\r\n      type: paymentSelected,\r\n      bank: \"\",\r\n      amount: this.totalCash,\r\n      note: \"\"\r\n    }\r\n    this.apiService.postPayTheBill(params)\r\n      .subscribe(result => {\r\n        self.loading.dismiss();\r\n        self.paymentSuccessShow();\r\n        // self.navCtrl.navigateForward('/popup-payment-success');\r\n    },\r\n    error => {\r\n      self.loading.dismiss();\r\n      // self.navCtrl.navigateForward('/payment-fail');\r\n    });\r\n  }\r\n\r\n  openPayment() {\r\n    // this.presentAlert(this.translate.instant('PAYMENT_INFOR.alert_comming_soon'));\r\n    var self = this;\r\n    // this.apiService.epaypayment(this.totalCash).subscribe((result) => {\r\n    //   console.log(result);\r\n    //   this.urlPayment = result.url;\r\n    //   this.payTheBill();\r\n    // });\r\n    if(this.paymentType == 'payment_cash'){\r\n      this.changePaymentModal(this.paymentType);\r\n    }else if(this.paymentType == 'payment_transfer'){\r\n      this.changePaymentModal(this.paymentType);\r\n    }else{\r\n      this.loading.present();\r\n      this.apiService.momoPayment(this.totalCash - this.promotionMoney - this.paidAmount).subscribe((result) => {\r\n        self.loading.dismiss();\r\n        if(result.resultCode == 0){\r\n          self.openURLAccuracyEpay(result.deeplink);\r\n        }else{\r\n          self.navCtrl.navigateForward('/payment-fail');\r\n        }\r\n        // this.urlPayment = result.url;\r\n        // this.payTheBill();\r\n      },\r\n      (error) => {\r\n        self.loading.dismiss();\r\n      });\r\n    }\r\n  }\r\n\r\n  openURLAccuracyEpay(url: string){\r\n    const browser = this.iab.create(url ,'_system', 'location=yes, enableviewportscale=yes');\r\n    browser.show();\r\n  }\r\n\r\n  // dumyPaymentMethod() {\r\n  //   this.paymentMethodList = [];\r\n  //   this.epayUserInfo = this.apiService.getEpayUserStored();\r\n  //   if (!this.epayUserInfo) {\r\n  //     return;\r\n  //   }\r\n  //   this.paymentMethodList = [\r\n  //     {\r\n  //       key: 1,\r\n  //       name: this.translate.instant('PAYMENT_INFOR.payment_wallet_title'),\r\n  //       content: this.formatMoney(this.epayUserInfo.user_info.balance) + 'đ',\r\n  //       money: this.epayUserInfo.user_info.balance,\r\n  //       isSelected: true,\r\n  //     },\r\n  //     // {\r\n  //     //   key: 2,\r\n  //     //   name: this.translate.instant('PAYMENT_INFOR.modal_change_vietcombank'),\r\n  //     //   content: this.translate.instant('PAYMENT_INFOR.modal_change_ref'),\r\n  //     //   isSelected: false,\r\n  //     // },\r\n  //   ];\r\n  //   this.paymentSelected = this.paymentMethodList[0];\r\n  // }\r\n\r\n  async presentAlert(message) {\r\n    var self = this;\r\n    const alert = await this.alertController.create({\r\n      cssClass: 'comming-soon-payment-class',\r\n      header: self.translate.instant('COMMON.information'),\r\n      message: message,\r\n      buttons: ['OK']\r\n    });\r\n    await alert.present();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PaymentConfirmPage } from './payment-confirm.page';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PaymentConfirmPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    TranslateModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [PaymentConfirmPage]\r\n})\r\nexport class PaymentConfirmPageModule {}\r\n"]}