{"version":3,"sources":["webpack:///src/app/pages/payment-history/payment-history.page.ts","webpack:///src/app/pages/payment-history/payment-history.page.html","webpack:///src/app/pages/payment-history/payment-history.module.ts"],"names":["PaymentHistoryPage","loading","platform","apiService","navCtrl","listPaymentBills","listPaymentBillsPaid","listPaymentBillsUnpaid","listPaymentBillsPending","listPaymentBillsOutdate","currentPageAll","currentPagePaid","currentPageUnpaid","currentPagePending","currentPageOutdate","numberRecordOnPage","NUMBER_RECORD_ON_PAGE","activeTabIndex","ready","then","readySource","heightScreen","height","getPaymentLogs","page","limit","category","search","event","isRefresh","status","present","self","target","complete","getListPayment","subscribe","result","dismiss","paymentBills","length","dataFilter","forEach","bill","payment","today","Date","endAt","inOutDays","getDiffDays","push","pushDataRequest","error","navigateForward","id","$event","allApiRequest","stringDate","formatString","stringValue","n","parseInt","toFixed","replace","c","i","a","startDate","endDate","diffTime","Math","abs","getTime","ceil","detail","index","isLoadMore","data","onTabChange","doRefresh","loadData","selector","templateUrl","styleUrls","routes","path","component","PaymentHistoryPageModule","forChild","imports","declarations"],"mappings":"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","file":"pages-payment-history-payment-history-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Platform, NavController } from '@ionic/angular';\r\nimport { ConstService } from 'src/app/utils/const.service';\r\nimport { ApiService } from '../../services/api/api.service';\r\nimport { LoadingService } from '../../services/loading/loading.service';\r\nimport { UtilsService } from '../../utils/utils.service';\r\n\r\n@Component({\r\n  selector: 'app-payment',\r\n  templateUrl: './payment-history.page.html',\r\n  styleUrls: ['./payment-history.page.scss'],\r\n})\r\nexport class PaymentHistoryPage implements OnInit {\r\n  heightScreen: number;\r\n  // data\r\n  listPaymentBills = [];\r\n  listPaymentBillsPaid = [];\r\n  listPaymentBillsUnpaid = [];\r\n  listPaymentBillsPending = [];\r\n  listPaymentBillsOutdate = [];\r\n  listDataConvert: any;\r\n  currentPageAll = 1;\r\n  currentPagePaid = 1;\r\n  currentPageUnpaid = 1;\r\n  currentPagePending = 1;\r\n  currentPageOutdate = 1;\r\n  numberRecordOnPage = ConstService.NUMBER_RECORD_ON_PAGE;\r\n  activeTabIndex = 0;\r\n\r\n  constructor(private loading: LoadingService, private platform: Platform, private apiService: ApiService, private navCtrl: NavController) {\r\n    this.platform.ready().then((readySource) => {\r\n      this.heightScreen = platform.height() - 250;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getPaymentLogs(this.currentPageAll, this.numberRecordOnPage, '', '', null, true);\r\n  }\r\n\r\n  ionViewWillEnter() {}\r\n\r\n  getPaymentLogs(page: number, limit: number, category: string, search: string, event: any, isRefresh: boolean, status = '') {\r\n    this.loading.present();\r\n    const self = this;\r\n    if (event) {\r\n      event.target.complete();\r\n    }\r\n    this.apiService.getListPayment(page, limit, category, search, status).subscribe(\r\n      (result) => {\r\n        self.loading.dismiss();\r\n        if (!result.paymentBills || result.paymentBills.length == 0) {\r\n          return;\r\n        }\r\n        const dataFilter = [];\r\n        result.paymentBills.forEach((bill) => {\r\n          if (bill.payment) {\r\n            const today = new Date();\r\n            const endAt = new Date(bill.payment.endAt);\r\n            if (today > endAt && bill.status == 'publish') {\r\n              bill.status = 'outdate';\r\n            }\r\n            if (bill.status == 'publish' || bill.status == 'outdate') {\r\n              bill.inOutDays = this.getDiffDays(today, endAt);\r\n            }\r\n            dataFilter.push(bill);\r\n          }\r\n        });\r\n        this.pushDataRequest(dataFilter, isRefresh);\r\n      },\r\n      (error) => {\r\n        self.loading.dismiss();\r\n      },\r\n      () => {\r\n        self.loading.dismiss();\r\n        if (event) {\r\n          event.target.complete();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  paymentHistoryClick() {\r\n    this.navCtrl.navigateForward('/payment-history');\r\n  }\r\n\r\n  detailPage(id) {\r\n    this.navCtrl.navigateForward('/payment-infor/' + id);\r\n  }\r\n\r\n  loadData($event) {\r\n    this.allApiRequest($event, true);\r\n  }\r\n\r\n  doRefresh(event) {\r\n    this.listPaymentBills = [];\r\n    this.listPaymentBillsPaid = [];\r\n    this.listPaymentBillsUnpaid = [];\r\n    this.listPaymentBillsPending = [];\r\n    this.listPaymentBillsOutdate = [];\r\n    this.currentPageAll = 1;\r\n    this.currentPagePaid = 1;\r\n    this.currentPageUnpaid = 1;\r\n    this.currentPagePending = 1;\r\n    this.currentPageOutdate = 1;\r\n    this.allApiRequest(event);\r\n  }\r\n\r\n  formatString(stringDate: string) {\r\n    return UtilsService.formatString(stringDate);\r\n  }\r\n\r\n  formatMoney(stringValue) {\r\n    let n = parseInt(stringValue);\r\n    if (n) {\r\n      return n.toFixed(0).replace(/./g, function (c, i, a) {\r\n        return i > 0 && c !== ',' && (a.length - i) % 3 === 0 ? '.' + c : c;\r\n      });\r\n    } else {\r\n      return '-';\r\n    }\r\n  }\r\n  getDiffDays(startDate: Date, endDate: Date) {\r\n    const diffTime = Math.abs(endDate.getTime() - startDate.getTime());\r\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n  }\r\n\r\n  onTabChange($event) {\r\n    this.activeTabIndex = $event.detail.index;\r\n    this.allApiRequest(null);\r\n  }\r\n\r\n  allApiRequest(event, isLoadMore = false) {\r\n    switch (this.activeTabIndex) {\r\n      case 1:\r\n        if (!isLoadMore && this.listPaymentBillsPaid.length == 0) {\r\n          this.getPaymentLogs(this.currentPagePaid, this.numberRecordOnPage, '', '', event, false, 'completed');\r\n        } else if (isLoadMore) {\r\n          this.currentPagePaid++;\r\n          this.getPaymentLogs(this.currentPagePaid, this.numberRecordOnPage, '', '', event, false, 'completed');\r\n        }\r\n        break;\r\n      case 2:\r\n        if (!isLoadMore && this.listPaymentBillsOutdate.length == 0) {\r\n          this.getPaymentLogs(this.currentPageOutdate, this.numberRecordOnPage, '', '', event, false, 'outdate');\r\n        } else if (isLoadMore) {\r\n          this.currentPageOutdate++;\r\n          this.getPaymentLogs(this.currentPageOutdate, this.numberRecordOnPage, '', '', event, false, 'outdate');\r\n        }\r\n        break;\r\n      case 3:\r\n        if (!isLoadMore && this.listPaymentBillsPending.length == 0) {\r\n          this.getPaymentLogs(this.currentPagePending, this.numberRecordOnPage, '', '', event, false, 'pending');\r\n        } else if (isLoadMore) {\r\n          this.currentPagePending++;\r\n          this.getPaymentLogs(this.currentPagePending, this.numberRecordOnPage, '', '', event, false, 'pending');\r\n        }\r\n        break;\r\n      case 4:\r\n        if (!isLoadMore && this.listPaymentBillsUnpaid.length == 0) {\r\n          this.getPaymentLogs(this.currentPageUnpaid, this.numberRecordOnPage, '', '', event, false, 'publish');\r\n        } else if (isLoadMore) {\r\n          this.currentPageUnpaid++;\r\n          this.getPaymentLogs(this.currentPageUnpaid, this.numberRecordOnPage, '', '', event, false, 'publish');\r\n        }\r\n        break;\r\n      default:\r\n        if (!isLoadMore && this.listPaymentBills.length == 0) {\r\n          this.getPaymentLogs(this.currentPageAll, this.numberRecordOnPage, '', '', event, false);\r\n        } else if (isLoadMore) {\r\n          this.currentPageAll++;\r\n          this.getPaymentLogs(this.currentPageAll, this.numberRecordOnPage, '', '', event, false);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  pushDataRequest(data, isRefresh) {\r\n    switch (this.activeTabIndex) {\r\n      case 1:\r\n        if (isRefresh) {\r\n          this.listPaymentBillsPaid = data;\r\n        } else {\r\n          this.listPaymentBillsPaid.push(...data);\r\n        }\r\n        break;\r\n      case 2:\r\n        if (isRefresh) {\r\n          this.listPaymentBillsOutdate = data;\r\n        } else {\r\n          this.listPaymentBillsOutdate.push(...data);\r\n        }\r\n        break;\r\n      case 3:\r\n        if (isRefresh) {\r\n          this.listPaymentBillsPending = data;\r\n        } else {\r\n          this.listPaymentBillsPending.push(...data);\r\n        }\r\n        break;\r\n      case 4:\r\n        if (isRefresh) {\r\n          this.listPaymentBillsUnpaid = data;\r\n        } else {\r\n          this.listPaymentBillsUnpaid.push(...data);\r\n        }\r\n        break;\r\n      default:\r\n        if (isRefresh) {\r\n          this.listPaymentBills = data;\r\n        } else {\r\n          this.listPaymentBills.push(...data);\r\n        }\r\n        break;\r\n    }\r\n  }\r\n}\r\n","<ion-header class=\"ion-no-border payment-history-header\">\r\n  <ion-buttons class=\"back-button\">\r\n    <ion-back-button color=\"light\" text=\"\" icon=\"chevron-back\" class=\"ion-back-button\"></ion-back-button>\r\n  </ion-buttons>\r\n  <ion-label class=\"header-title\">{{ 'PAYMENT.title' | translate }}</ion-label>\r\n  <super-tabs [activeTabIndex]=\"activeTabIndex\"\r\n    [config]=\"{ debug: false, sideMenu: 'left', allowElementScroll: true, nativeSmoothScroll: true }\" class=\"super-tabs-content\"\r\n    (tabChange)=\"onTabChange($event)\">\r\n    <super-tabs-toolbar slot=\"top\" scrollable=\"true\" no-border scrollable-padding=\"false\" class=\"super-tabs-toolbar\">\r\n      <super-tab-button class=\"super-tab-button\">\r\n        <ion-label class=\"tab-button-label\">{{ 'PAYMENT.all_payment' | translate }}</ion-label>\r\n        <ion-label class=\"under_line\"></ion-label>\r\n      </super-tab-button>\r\n      <super-tab-button class=\"super-tab-button\">\r\n        <ion-label class=\"tab-button-label\">{{ 'PAYMENT.badge_paid' | translate }}</ion-label>\r\n        <ion-label class=\"under_line\"></ion-label>\r\n      </super-tab-button>\r\n      <super-tab-button class=\"super-tab-button\">\r\n        <ion-label class=\"tab-button-label\">{{ 'PAYMENT.badge_outdate' | translate }}</ion-label>\r\n        <ion-label class=\"under_line\"></ion-label>\r\n      </super-tab-button>\r\n      <super-tab-button class=\"super-tab-button\">\r\n        <ion-label class=\"tab-button-label\">{{ 'PAYMENT.status_pending' | translate }}</ion-label>\r\n        <ion-label class=\"under_line\"></ion-label>\r\n      </super-tab-button>\r\n      <super-tab-button class=\"super-tab-button\">\r\n        <ion-label class=\"tab-button-label\">{{ 'PAYMENT.badge_unpaid' | translate }}</ion-label>\r\n        <ion-label class=\"under_line\"></ion-label>\r\n      </super-tab-button>\r\n    </super-tabs-toolbar>\r\n    <super-tabs-container>\r\n      <super-tab></super-tab>\r\n    </super-tabs-container>\r\n  </super-tabs>\r\n</ion-header>\r\n\r\n<ion-content [scrollEvents]=\"false\" class=\"payment-history-content\" slot=\"fixed\">\r\n  <ion-refresher slot=\"fixed\" (ionRefresh)=\"doRefresh($event)\" pullMin=\"100\">\r\n    <ion-refresher-content pullingIcon=\"circles\" refreshingSpinner=\"\" refreshingText=\"\"></ion-refresher-content>\r\n  </ion-refresher>\r\n\r\n  <ion-list *ngIf=\"activeTabIndex == 0\">\r\n    <ion-card *ngFor=\"let item of listPaymentBills\" (click)=\"detailPage(item._id)\" class=\"payment-card\">\r\n      <ion-item lines=\"none\" class=\"payment-card-item\">\r\n        <ng-container [ngSwitch]=\"item.status\" *ngIf=\"item?.campaign.settingPaymentMode == 'active'\">\r\n          <ion-label slot=\"start\" class=\"update-time\" *ngSwitchCase=\"'publish'\">\r\n            {{formatString(item.updatedAt)}} - {{ 'PAYMENT.paid_in_days' | translate: { inOutDays: item.inOutDays } }}\r\n          </ion-label>\r\n          <ion-label slot=\"start\" class=\"update-time\" *ngSwitchCase=\"'outdate'\">\r\n            {{formatString(item.updatedAt)}} - {{ 'PAYMENT.paid_out_days' | translate: { inOutDays: item.inOutDays } }}\r\n          </ion-label>\r\n          <ion-label slot=\"start\" class=\"update-time\" *ngSwitchDefault>{{formatString(item.updatedAt)}}</ion-label>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"item?.campaign.settingPaymentMode != 'active'\">\r\n          <ion-label slot=\"start\" class=\"update-time\">{{formatString(item.updatedAt)}}</ion-label>\r\n        </ng-container>\r\n        <ion-badge class=\"badge-status badge-paid\" *ngIf=\"item.status == 'completed' && item?.campaign.settingPaymentMode == 'active'\">{{ 'PAYMENT.badge_paid' | translate }}\r\n        </ion-badge>\r\n        <ion-badge class=\"badge-status badge-unpaid\" *ngIf=\"item.status == 'publish' && item?.campaign.settingPaymentMode == 'active'\">{{ 'PAYMENT.badge_unpaid' | translate }}\r\n        </ion-badge>\r\n        <ion-badge class=\"badge-status badge-pending\" *ngIf=\"item.status == 'pending' && item?.campaign.settingPaymentMode == 'active'\">{{ 'PAYMENT.status_pending' | translate }}\r\n        </ion-badge>\r\n        <ion-badge class=\"badge-status badge-outdate\" *ngIf=\"item.status == 'outdate' && item?.campaign.settingPaymentMode == 'active'\">{{ 'PAYMENT.badge_outdate' | translate }}\r\n        </ion-badge>\r\n      </ion-item>\r\n      <ion-text class=\"\">\r\n        <p class=\"payment-title\">{{item?.payment?.title}} - {{item?.campaign.title}} {{item?.apartment.title}}</p>\r\n      </ion-text>\r\n      <div class=\"devider-line-detail-payment\"></div>\r\n      <ion-item lines=\"none\" class=\"payment-money-item\">\r\n        <ion-label fixed slot=\"start\" class=\"money-title\">{{\"PAYMENT.number_money_label\" | translate}} </ion-label>\r\n        <ion-label class=\"mone-number\">{{formatMoney(item.total)}}đ</ion-label>\r\n        <ion-button class=\"btn-paid\" slot=\"end\" *ngIf=\"(item.status == 'publish' || item.status == 'outdate') && item?.campaign.settingPaymentMode == 'active'\">\r\n          {{\"PAYMENT.btn_paid_label\" | translate}}</ion-button>\r\n      </ion-item>\r\n    </ion-card>\r\n  </ion-list>\r\n\r\n  <ion-list *ngIf=\"activeTabIndex == 1\">\r\n    <ion-card *ngFor=\"let item of listPaymentBillsPaid\" (click)=\"detailPage(item._id)\" class=\"payment-card\">\r\n      <ion-item lines=\"none\" class=\"payment-card-item\">\r\n        <ion-label slot=\"start\" class=\"update-time\">{{formatString(item.updatedAt)}}</ion-label>\r\n        <ion-badge class=\"badge-status badge-paid\">{{ 'PAYMENT.badge_paid' | translate }}</ion-badge>\r\n      </ion-item>\r\n      <ion-text class=\"\">\r\n        <p class=\"payment-title\">{{item?.payment?.title}} - {{item?.campaign.title}} {{item?.apartment.title}}</p>\r\n      </ion-text>\r\n      <div class=\"devider-line-detail-payment\"></div>\r\n      <ion-item lines=\"none\" class=\"payment-money-item\">\r\n        <ion-label fixed slot=\"start\" class=\"money-title\">{{\"PAYMENT.number_money_label\" | translate}} </ion-label>\r\n        <ion-label class=\"mone-number\">{{formatMoney(item.total)}}đ</ion-label>\r\n      </ion-item>\r\n    </ion-card>\r\n  </ion-list>\r\n\r\n  <ion-list *ngIf=\"activeTabIndex == 2\">\r\n    <ion-card *ngFor=\"let item of listPaymentBillsOutdate\" (click)=\"detailPage(item._id)\" class=\"payment-card\">\r\n      <ion-item lines=\"none\" class=\"payment-card-item\">\r\n        <ion-label slot=\"start\" class=\"update-time\">\r\n          {{formatString(item.updatedAt)}} - {{ 'PAYMENT.paid_out_days' | translate: { inOutDays: item.inOutDays } }}\r\n        </ion-label>\r\n        <ion-badge class=\"badge-status badge-outdate\">{{ 'PAYMENT.badge_outdate' | translate }}</ion-badge>\r\n      </ion-item>\r\n      <ion-text class=\"\">\r\n        <p class=\"payment-title\">{{item?.payment?.title}} - {{item?.campaign.title}} {{item?.apartment.title}}</p>\r\n      </ion-text>\r\n      <div class=\"devider-line-detail-payment\"></div>\r\n      <ion-item lines=\"none\" class=\"payment-money-item\">\r\n        <ion-label fixed slot=\"start\" class=\"money-title\">{{\"PAYMENT.number_money_label\" | translate}} </ion-label>\r\n        <ion-label class=\"mone-number\">{{formatMoney(item.total)}}đ</ion-label>\r\n        <ion-button class=\"btn-paid\" slot=\"end\">{{\"PAYMENT.btn_paid_label\" | translate}}</ion-button>\r\n      </ion-item>\r\n    </ion-card>\r\n  </ion-list>\r\n\r\n  <ion-list *ngIf=\"activeTabIndex == 3\">\r\n    <ion-card *ngFor=\"let item of listPaymentBillsPending\" (click)=\"detailPage(item._id)\" class=\"payment-card\">\r\n      <ion-item lines=\"none\" class=\"payment-card-item\">\r\n        <ion-label slot=\"start\" class=\"update-time\">{{formatString(item.updatedAt)}}</ion-label>\r\n        <ion-badge class=\"badge-status badge-pending\">{{ 'PAYMENT.status_pending' | translate }}</ion-badge>\r\n      </ion-item>\r\n      <ion-text class=\"\">\r\n        <p class=\"payment-title\">{{item?.payment?.title}} - {{item?.campaign.title}} {{item?.apartment.title}}</p>\r\n      </ion-text>\r\n      <div class=\"devider-line-detail-payment\"></div>\r\n      <ion-item lines=\"none\" class=\"payment-money-item\">\r\n        <ion-label fixed slot=\"start\" class=\"money-title\">{{\"PAYMENT.number_money_label\" | translate}} </ion-label>\r\n        <ion-label class=\"mone-number\">{{formatMoney(item.total)}}đ</ion-label>\r\n      </ion-item>\r\n    </ion-card>\r\n  </ion-list>\r\n\r\n  <ion-list *ngIf=\"activeTabIndex == 4\">\r\n    <ion-card *ngFor=\"let item of listPaymentBillsUnpaid\" (click)=\"detailPage(item._id)\" class=\"payment-card\">\r\n      <ion-item lines=\"none\" class=\"payment-card-item\">\r\n        <ion-label slot=\"start\" class=\"update-time\" *ngIf=\"item?.campaign.settingPaymentMode == 'active'\">\r\n          {{formatString(item.updatedAt)}} - {{ 'PAYMENT.paid_in_days' | translate: { inOutDays: item.inOutDays } }}\r\n        </ion-label>\r\n        <ion-badge class=\"badge-status badge-unpaid\" *ngIf=\"item?.campaign.settingPaymentMode == 'active'\">{{ 'PAYMENT.badge_unpaid' | translate }}</ion-badge>\r\n      </ion-item>\r\n      <ion-text class=\"\">\r\n        <p class=\"payment-title\">{{item?.payment?.title}} - {{item?.campaign.title}} {{item?.apartment.title}}</p>\r\n      </ion-text>\r\n      <div class=\"devider-line-detail-payment\"></div>\r\n      <ion-item lines=\"none\" class=\"payment-money-item\">\r\n        <ion-label fixed slot=\"start\" class=\"money-title\">{{\"PAYMENT.number_money_label\" | translate}} </ion-label>\r\n        <ion-label class=\"mone-number\">{{formatMoney(item.total)}}đ</ion-label>\r\n        <ion-button class=\"btn-paid\" slot=\"end\" *ngIf=\"item?.campaign.settingPaymentMode == 'active'\">{{\"PAYMENT.btn_paid_label\" | translate}}</ion-button>\r\n      </ion-item>\r\n    </ion-card>\r\n  </ion-list>\r\n  <ion-infinite-scroll threshold=\"150px\" (ionInfinite)=\"loadData($event)\">\r\n    <ion-infinite-scroll-content loadingSpinner=\"\" loadingText=\"\"></ion-infinite-scroll-content>\r\n  </ion-infinite-scroll>\r\n</ion-content>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SuperTabsModule } from '@ionic-super-tabs/angular';\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PaymentHistoryPage } from './payment-history.page';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PaymentHistoryPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SuperTabsModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    TranslateModule,\r\n    RouterModule.forChild(routes),\r\n  ],\r\n  declarations: [PaymentHistoryPage]\r\n})\r\nexport class PaymentHistoryPageModule {}\r\n"]}