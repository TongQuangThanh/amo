{"version":3,"sources":["webpack:///src/app/pages/new-password/new-password.page.ts","webpack:///src/app/pages/new-password/new-password.page.html","webpack:///src/app/pages/new-password/new-password.module.ts"],"names":["NewPasswordPage","translate","alertService","loading","apiService","navCtrl","route","errorMessage","errorNewPass","errorConfirmPass","password_type","passwordToggleIcon","passwordConfirm_type","passwordNewToggleIcon","phoneNumber","snapshot","paramMap","get","tokenCode","newPassword","length","confirmPassword","self","params","phone","token","present","resetPassword","subscribe","result","dismiss","presentToast","instant","navigateBack","error","message","updateAccount","togglePassword","togglePasswordNew","changePass","selector","templateUrl","styleUrls","routes","path","component","NewPasswordPageModule","forChild","imports","declarations"],"mappings":"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","file":"pages-new-password-new-password-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from '../../services/api/api.service';\r\nimport { NavController } from '@ionic/angular';\r\nimport { LoadingService } from '../../services/loading/loading.service';\r\nimport { UtilsService } from '../../utils/utils.service';\r\nimport { AlertService } from '../../services/alert/alert.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Component({\r\n  selector: 'app-new-password',\r\n  templateUrl: './new-password.page.html',\r\n  styleUrls: ['./new-password.page.scss'],\r\n})\r\nexport class NewPasswordPage implements OnInit {\r\n\r\n  newPassword: string;\r\n  confirmPassword: string;\r\n  phoneNumber: string;\r\n  tokenCode: string;\r\n  errorMessage:string = \"\";\r\n  errorNewPass:Boolean = false;\r\n  errorConfirmPass:Boolean = false;\r\n  password_type: string = 'password';\r\n  passwordToggleIcon = 'eye-off-outline';\r\n  passwordConfirm_type: string = 'password';\r\n  passwordNewToggleIcon = 'eye-off-outline';\r\n\r\n  constructor(\r\n    private translate: TranslateService,\r\n    private alertService: AlertService,\r\n    private loading: LoadingService,\r\n    private apiService: ApiService,\r\n    private navCtrl: NavController,\r\n    private route: ActivatedRoute\r\n  ) { \r\n    this.phoneNumber = this.route.snapshot.paramMap.get('phone');\r\n    this.tokenCode = this.route.snapshot.paramMap.get('token');\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  togglePassword(): void {\r\n    //this.showPassword != this.showPassword;\r\n    this.password_type = this.password_type === 'text' ? 'password' : 'text';\r\n    if (this.passwordToggleIcon == 'eye-outline') {\r\n      this.passwordToggleIcon = 'eye-off-outline';\r\n    } else {\r\n      this.passwordToggleIcon = 'eye-outline';\r\n    }\r\n  }\r\n\r\n  togglePasswordNew(): void {\r\n    //this.showPassword != this.showPassword;\r\n    this.passwordConfirm_type = this.passwordConfirm_type === 'text' ? 'password' : 'text';\r\n    if (this.passwordNewToggleIcon == 'eye-outline') {\r\n      this.passwordNewToggleIcon = 'eye-off-outline';\r\n    } else {\r\n      this.passwordNewToggleIcon = 'eye-outline';\r\n    }\r\n  }\r\n\r\n  checkNewPassword() {\r\n    if (this.newPassword && this.newPassword.length >= 8) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  checkConfirmPassword() {\r\n    if (this.confirmPassword && this.confirmPassword.length >= 8 && this.newPassword && this.newPassword == this.confirmPassword) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  checkIsEnabled() {\r\n    if (this.newPassword && this.newPassword.length >= 8 && this.confirmPassword && this.confirmPassword.length >= 8 && this.newPassword == this.confirmPassword) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  updateAccount(){\r\n    var self = this;\r\n    const params = {\r\n      phone: this.phoneNumber,\r\n      token: this.tokenCode,\r\n      newPassword: this.newPassword\r\n    };\r\n    this.loading.present();\r\n    this.apiService.resetPassword(params)\r\n      .subscribe(result => {\r\n        self.loading.dismiss()\r\n        self.errorMessage = \"\";\r\n        self.errorNewPass = false;\r\n        self.errorConfirmPass = false;\r\n        self.alertService.presentToast(this.translate.instant('NEW_PASSWORD.message_change_pass_sucess'));\r\n        self.navCtrl.navigateBack('/login/' + self.phoneNumber);\r\n    },\r\n    error => {\r\n      self.loading.dismiss();\r\n      self.errorNewPass = false;\r\n      self.errorConfirmPass = false;\r\n      self.errorMessage = error.error.message;\r\n    });\r\n  }\r\n\r\n  changePass(){\r\n    if(!this.newPassword || this.newPassword.length < 8){\r\n      this.errorNewPass = true;\r\n      this.errorConfirmPass = false;\r\n      this.errorMessage = this.translate.instant('NEW_PASSWORD.error_length_new_password_message');\r\n      return;\r\n    }\r\n\r\n    if(!this.confirmPassword || this.confirmPassword.length < 8){\r\n      this.errorNewPass = false;\r\n      this.errorConfirmPass = true;\r\n      this.errorMessage = this.translate.instant('NEW_PASSWORD.error_length_confirm_password_message');\r\n      return;\r\n    }\r\n\r\n    if(this.newPassword != this.confirmPassword){\r\n      this.errorNewPass = true;\r\n      this.errorConfirmPass = true;\r\n      this.errorMessage = this.translate.instant('NEW_PASSWORD.error_not_match_password_message');\r\n      return;\r\n    }\r\n\r\n    this.updateAccount();\r\n  }\r\n  \r\n}\r\n","<!-- <ion-header class=\"ion-no-border\">\r\n  <ion-toolbar class=\"header-toolbar\">\r\n    <ion-buttons slot=\"start\">\r\n      <ion-back-button text=\"\" icon=\"chevron-back\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-title>{{ 'NEW_PASSWORD.title' | translate }}</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>  -->\r\n\r\n<ion-header class=\"ion-no-border\">\r\n  <div class=\"login-header\">\r\n    <ion-buttons>\r\n      <ion-back-button color=\"light\" text=\"\" icon=\"chevron-back\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-label class=\"login-title\">{{ 'NEW_PASSWORD.title' | translate }}</ion-label>\r\n    <ion-label></ion-label>\r\n  </div>\r\n</ion-header>\r\n\r\n  <ion-content>\r\n    <section>\r\n      <ion-item lines=\"none\" class=\"form-class note-style\">\r\n        <ion-label class=\"ion-text-wrap label-text\">{{ 'NEW_PASSWORD.password_note' | translate }}</ion-label>\r\n      </ion-item>\r\n    </section>\r\n    <section class=\"change-password-input\">\r\n      <ion-item class=\"input-item\" lines=\"none\">\r\n        <ion-icon class=\"input-icon\" name=\"custom-locker\" src=\"/assets/icon/custom-locker.svg\" slot=\"start\"></ion-icon>\r\n        <ion-label class=\"input-floating-label\" position=\"floating\">{{ 'NEW_PASSWORD.place_holder_new_password' | translate }}</ion-label>\r\n        <ion-input class=\"input-text\" [(ngModel)]=\"newPassword\" [type]=\"password_type\" name=\"newPassword\"></ion-input>\r\n        <ion-icon [ngClass]=\"!checkNewPassword() ? 'clear-input check-default' : 'clear-input check-success'\" name=\"checkmark-circle\" slot=\"end\"></ion-icon>\r\n        <ion-icon class=\"pass-hide-icon\" [name]=\"passwordToggleIcon\" (click)=\"togglePassword()\" slot=\"end\"></ion-icon>\r\n      </ion-item>\r\n      <ion-item class=\"input-item\" lines=\"none\">\r\n        <ion-icon class=\"input-icon\" name=\"custom-locker\" src=\"/assets/icon/custom-locker.svg\" slot=\"start\"></ion-icon>\r\n        <ion-label class=\"input-floating-label\" position=\"floating\">{{ 'NEW_PASSWORD.place_holder_confirm_password' | translate }}</ion-label>\r\n        <ion-input class=\"input-text\" [(ngModel)]=\"confirmPassword\" [type]=\"passwordConfirm_type\" name=\"confirmPassword\"></ion-input>\r\n        <ion-icon [ngClass]=\"!checkConfirmPassword() ? 'clear-input check-default' : 'clear-input check-success'\" name=\"checkmark-circle\" slot=\"end\"></ion-icon>\r\n        <ion-icon class=\"pass-hide-icon\" [name]=\"passwordNewToggleIcon\" (click)=\"togglePasswordNew()\" slot=\"end\"></ion-icon>\r\n      </ion-item>\r\n      <!-- <ion-item lines=\"none\" class=\"margin-top-10\">\r\n        <ion-input [ngClass]=\"!errorNewPass ? 'custom-common-input custom-common-input-text' : 'custom-common-input custom-common-input-text error-input'\" placeholder=\"{{ 'NEW_PASSWORD.place_holder_new_password' | translate }}\" [(ngModel)]=\"newPassword\" type=\"password\" name=\"newPassword\"></ion-input>\r\n      </ion-item>\r\n      <ion-item lines=\"none\" class=\"margin-top-10\">\r\n        <ion-input [ngClass]=\"!errorConfirmPass ? 'custom-common-input custom-common-input-text' : 'custom-common-input custom-common-input-text error-input'\" placeholder=\"{{ 'NEW_PASSWORD.place_holder_confirm_password' | translate }}\" [(ngModel)]=\"confirmPassword\" type=\"password\" name=\"confirmPassword\"></ion-input>\r\n      </ion-item> -->\r\n      <ion-item lines=\"none\" class=\"margin-top-10\" *ngIf=\"errorMessage != ''\">\r\n          <ion-label color=\"danger\" class=\"error-message\">{{errorMessage}}</ion-label>\r\n      </ion-item>\r\n      <ion-button (click)=\"changePass()\" expand=\"block\" class=\"\" [ngClass]=\"!checkIsEnabled() ? 'button-common change-pass-button' : 'button-common change-pass-button button-common-active'\" [disabled]=\"!checkIsEnabled()\">\r\n        <ion-label class=\"button-change-pass-label\">{{ 'NEW_PASSWORD.btn_change_pass' | translate }}</ion-label>\r\n      </ion-button>\r\n    </section>\r\n    <!-- <section class=\"full-width function-section margin-top-10\" (click)=\"changePass()\">\r\n        <ion-button expand=\"block\" class=\"amo-button-custom\">{{ 'NEW_PASSWORD.btn_change_pass' | translate }}</ion-button>\r\n    </section> -->\r\n    \r\n  </ion-content>\r\n  ","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { NewPasswordPage } from './new-password.page';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NewPasswordPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    TranslateModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [NewPasswordPage]\r\n})\r\nexport class NewPasswordPageModule {}\r\n"]}