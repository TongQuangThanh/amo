{"version":3,"sources":["webpack:///src/app/pages/auth/register-password/register-password.page.ts","webpack:///src/app/pages/auth/register-password/register-password.page.html","webpack:///src/app/pages/auth/register-password/register-password.module.ts"],"names":["RegisterPasswordPage","alertService","loading","apiService","navCtrl","route","modalController","errorMessage","errorNewPass","errorConfirmPass","phoneNumber","snapshot","paramMap","get","tokenCode","refCode","newPassword","length","confirmPassword","self","confirmApartmentCode","subscribe","result","dismiss","navigateRoot","error","changePass","selector","templateUrl","styleUrls","routes","path","component","RegisterPasswordPageModule","forChild","imports","declarations"],"mappings":"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","file":"pages-auth-register-password-register-password-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from '../../../services/api/api.service';\r\nimport { NavController } from '@ionic/angular';\r\nimport { LoadingService } from '../../../services/loading/loading.service';\r\nimport { UtilsService } from '../../../utils/utils.service';\r\nimport { AlertService } from '../../../services/alert/alert.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ModalController } from '@ionic/angular';\r\nimport { ApartmentCodeRegisterPage } from '../apartment-code-register/apartment-code-register.page'\r\n\r\n@Component({\r\n  selector: 'app-register-password',\r\n  templateUrl: './register-password.page.html',\r\n  styleUrls: ['./register-password.page.scss'],\r\n})\r\nexport class RegisterPasswordPage implements OnInit {\r\n\r\n  newPassword: string;\r\n  confirmPassword: string;\r\n  phoneNumber: string;\r\n  tokenCode: string;\r\n  errorMessage:string = \"\";\r\n  errorNewPass:Boolean = false;\r\n  errorConfirmPass:Boolean = false;\r\n  refCode: string;\r\n  constructor(\r\n    private alertService: AlertService,\r\n    private loading: LoadingService,\r\n    private apiService: ApiService,\r\n    private navCtrl: NavController,\r\n    private route: ActivatedRoute,\r\n    public modalController: ModalController,\r\n  ) { \r\n    this.phoneNumber = this.route.snapshot.paramMap.get('phone');\r\n    this.tokenCode = this.route.snapshot.paramMap.get('token');\r\n    this.refCode = this.route.snapshot.paramMap.get('refCode');\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  changePass(){\r\n    if(!this.newPassword || this.newPassword.length < 8){\r\n      this.errorNewPass = true;\r\n      this.errorConfirmPass = false;\r\n      this.errorMessage = \"Please new password at least 8 character\";\r\n      return;\r\n    }\r\n\r\n    if(!this.confirmPassword || this.confirmPassword.length < 8){\r\n      this.errorNewPass = false;\r\n      this.errorConfirmPass = true;\r\n      this.errorMessage = \"Please confirm password at least 8 character\";\r\n      return;\r\n    }\r\n\r\n    if(this.newPassword != this.confirmPassword){\r\n      this.errorNewPass = true;\r\n      this.errorConfirmPass = true;\r\n      this.errorMessage = \"New password and confirm password does not match\";\r\n      return;\r\n    }\r\n    var self = this;\r\n    this.apiService.confirmApartmentCode(this.phoneNumber, this.refCode, this.tokenCode, this.newPassword)\r\n      .subscribe(result => {\r\n        self.loading.dismiss();\r\n        this.navCtrl.navigateRoot('/login/' + this.phoneNumber);\r\n    },\r\n    error => {\r\n      self.loading.dismiss();\r\n    });\r\n  }\r\n\r\n}\r\n","<!-- <ion-header class=\"ion-no-border\">\r\n  <ion-toolbar>\r\n    <ion-title>{{ 'REGISTER_PASSWORD.title' | translate }}</ion-title>\r\n    <ion-buttons slot=\"start\">\r\n        <ion-back-button text=\"\"></ion-back-button>\r\n      </ion-buttons>\r\n  </ion-toolbar>\r\n</ion-header> -->\r\n\r\n<ion-header class=\"ion-no-border\">\r\n  <div class=\"login-header\">\r\n    <ion-buttons>\r\n      <ion-back-button color=\"light\" text=\"\" icon=\"chevron-back\"></ion-back-button>\r\n    </ion-buttons>\r\n    <ion-label class=\"login-title\">{{ 'REGISTER_PASSWORD.title' | translate }}</ion-label>\r\n    <ion-label></ion-label>\r\n  </div>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <section>\r\n    <ion-item lines=\"none\" class=\"form-class note-style\">\r\n      <ion-label class=\"ion-text-wrap label-text\">{{ 'REGISTER_PASSWORD.password_note' | translate }}</ion-label>\r\n    </ion-item>\r\n  </section>\r\n  <section>\r\n    <ion-item lines=\"none\" class=\"margin-top-10\">\r\n      <ion-input [ngClass]=\"!errorNewPass ? 'custom-common-input custom-common-input-text' : 'custom-common-input custom-common-input-text error-input'\" placeholder=\"{{ 'REGISTER_PASSWORD.place_holder_new_password' | translate }}\" [(ngModel)]=\"newPassword\" type=\"password\" name=\"newPassword\"></ion-input>\r\n    </ion-item>\r\n    <ion-item lines=\"none\" class=\"margin-top-10\">\r\n      <ion-input [ngClass]=\"!errorConfirmPass ? 'custom-common-input custom-common-input-text' : 'custom-common-input custom-common-input-text error-input'\" placeholder=\"{{ 'REGISTER_PASSWORD.place_holder_confirm_password' | translate }}\" [(ngModel)]=\"confirmPassword\" type=\"password\" name=\"confirmPassword\"></ion-input>\r\n    </ion-item>\r\n    <ion-item lines=\"none\" class=\"margin-top-10\" *ngIf=\"errorMessage != ''\">\r\n        <ion-label color=\"danger\" class=\"error-message\">{{errorMessage}}</ion-label>\r\n    </ion-item>\r\n  </section>\r\n  <section class=\"full-width function-section margin-top-10\" (click)=\"changePass()\">\r\n      <ion-button expand=\"block\" class=\"amo-button-custom\">{{ 'REGISTER_PASSWORD.btn_change_pass' | translate }}</ion-button>\r\n  </section>\r\n</ion-content>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { RegisterPasswordPage } from './register-password.page';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: RegisterPasswordPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    TranslateModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [RegisterPasswordPage]\r\n})\r\nexport class RegisterPasswordPageModule {}\r\n"]}