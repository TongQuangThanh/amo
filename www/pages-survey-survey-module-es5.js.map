{"version":3,"sources":["webpack:///src/app/pages/survey/survey.page.html","webpack:///src/app/pages/survey/survey.page.ts","webpack:///src/app/pages/survey/survey.module.ts"],"names":["SurveyPage","router","translate","alertController","apiService","modalController","loading","route","survey","surveyResult","currentStep","surveyId","snapshot","paramMap","get","getSurveyDetail","present","getArticleDetail","subscribe","result","surveyData","article","JSON","parse","mappingSurveyData","dismiss","error","action","length","surveyStep","question_type","answer_option","find","opt","isChecked","presentAlert","instant","createSurveyResult","postSurvey","_id","res","navigate","map","item","answer","option","value","forEach","index","content","question","answerResult","filter","op","create","component","componentProps","cssClass","modal","message","self","header","buttons","alert","surveyDetailClick","changeStep","selector","templateUrl","styleUrls","routes","path","SurveyPageModule","forChild","imports","declarations"],"mappings":"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","file":"pages-survey-survey-module-es5.js","sourcesContent":["<ion-content class=\"no-scroll survey-wrapper\" slot=\"fixed\">\r\n    <ion-header class=\"survey-header\">\r\n        <ion-buttons class=\"back-button\">\r\n            <ion-back-button color=\"light\" text=\"\" icon=\"chevron-back\" class=\"ion-back-button\"></ion-back-button>\r\n        </ion-buttons>\r\n        <ion-label class=\"header-title\"></ion-label>\r\n        <ion-label></ion-label>\r\n    </ion-header>\r\n\r\n    <div class=\"survey-title-wrapper\">\r\n        <ion-label class=\"survey-title\">{{surveyData?.title}}</ion-label>\r\n        <ion-label class=\"survey-sub-title\">{{surveyData?.excerpt}}</ion-label>\r\n        <ion-label class=\"survey-detail-link\" (click)=\"surveyDetailClick()\">{{'SURVEY.detail_lable' | translate}}</ion-label>\r\n    </div>\r\n\r\n    <div class=\"survey-content\">\r\n        <div class=\"question-wrapper {{currentStep != i ? 'survey-padding-bottom' : ''}}\" *ngFor=\"let question of survey; let i = index\">\r\n            <div class=\"question-order\" *ngIf=\"currentStep < i || currentStep === i\">{{ i+1 }}</div>\r\n            <div class=\"question-order\" *ngIf=\"currentStep > i\">\r\n                <ion-icon name=\"checkmark\"></ion-icon>\r\n            </div>\r\n            <div class=\"question\">\r\n                <!-- question -->\r\n                <ion-label class=\"question-title\">{{ question.question }}</ion-label>\r\n                <div class=\"answer-block\" *ngIf=\"currentStep == i\">\r\n                    <!-- single type -->\r\n                    <ion-list class=\"list-anwers\" *ngIf=\"question.question_type == '0'\">\r\n                        <ion-radio-group value=\"biff\" [value]=\"question.answer\" (ionChange) = \"question.answer = $event.detail.value\">\r\n                            <ion-item class=\"answer-item\" lines=\"none\" *ngFor=\"let answer of question.answer_option\">\r\n                                <ion-label class=\"answer-label\">{{ answer }}</ion-label>\r\n                                <ion-radio mode='md' slot=\"start\" color=\"light\" [value]=\"answer\"></ion-radio>\r\n                            </ion-item>\r\n                        </ion-radio-group>\r\n                    </ion-list>\r\n                    <!-- multiple type -->\r\n                    <ion-list class=\"list-anwers\" *ngIf=\"question.question_type == '1'\">\r\n                        <ion-item class=\"answer-item\" lines=\"none\" *ngFor=\"let answer of question.answer_option\">\r\n                            <ion-label class=\"answer-label\">{{answer.value}}</ion-label>\r\n                            <ion-checkbox mode=\"md\" slot=\"start\" color=\"light\" class=\"survey-checkbox\" [(ngModel)]=\"answer.isChecked\">\r\n                            </ion-checkbox>\r\n                        </ion-item>\r\n                    </ion-list>\r\n                    <!-- text type -->\r\n                    <ion-textarea class=\"answer-textarea\" placeholder=\"Viết ý kiến\" autoGrow=\"true\" *ngIf=\"question.question_type == '2'\"\r\n                        [(ngModel)]=\"question.answer\">\r\n                    </ion-textarea>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"navigation-block\" [ngClass]=\"{'single-button': currentStep == 0}\">\r\n        <ion-button color=\"light\" shape=\"round\" (click)=\"changeStep('prev')\" class=\"navigation-btn\" *ngIf=\"currentStep > 0\">\r\n            <ion-icon name=\"arrow-back-outline\"></ion-icon>\r\n        </ion-button>\r\n        <ion-button color=\"light\" shape=\"round\" (click)=\"changeStep('next')\" class=\"navigation-btn\">\r\n            <ion-icon name=\"arrow-forward-outline\"></ion-icon>\r\n        </ion-button>\r\n    </div>\r\n</ion-content>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AlertController, ModalController } from '@ionic/angular';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ApiService } from 'src/app/services/api/api.service';\r\nimport { LoadingService } from 'src/app/services/loading/loading.service';\r\nimport { PopupSurveyDetailPage } from '../popup-survey-detail/popup-survey-detail.page';\r\n\r\ninterface Question {\r\n  question: string;\r\n  question_type: any;\r\n  answer_option?: any;\r\n  answer?: any;\r\n}\r\ntype NavigateAction = 'next' | 'prev';\r\n\r\n@Component({\r\n  selector: 'app-survey',\r\n  templateUrl: './survey.page.html',\r\n  styleUrls: ['./survey.page.scss'],\r\n})\r\nexport class SurveyPage implements OnInit {\r\n  surveyId: any;\r\n  surveyData: any;\r\n  survey: Array<Question> = [];\r\n  surveyResult = {};\r\n\r\n  currentStep = 0;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private translate: TranslateService,\r\n    private alertController: AlertController,\r\n    private apiService: ApiService,\r\n    private modalController: ModalController,\r\n    private loading: LoadingService,\r\n    private route: ActivatedRoute,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.surveyId = this.route.snapshot.paramMap.get('id');\r\n    this.getSurveyDetail();\r\n  }\r\n  ionViewWillEnter() {}\r\n\r\n  getSurveyDetail() {\r\n    this.loading.present();\r\n    this.apiService.getArticleDetail(this.surveyId).subscribe(\r\n      (result) => {\r\n        this.surveyData = result.article;\r\n        this.survey = JSON.parse(this.surveyData.survey);\r\n        this.mappingSurveyData();\r\n        this.loading.dismiss();\r\n      },\r\n      (error) => {\r\n        this.loading.dismiss();\r\n      }\r\n    );\r\n  }\r\n\r\n  changeStep(action: NavigateAction) {\r\n    if (action === 'next') {\r\n      if (this.currentStep < this.survey.length - 1) {\r\n        const surveyStep = this.survey[this.currentStep];\r\n        if (surveyStep && surveyStep.question_type == '1' && !surveyStep.answer_option.find((opt) => opt.isChecked)) {\r\n          this.presentAlert(this.translate.instant('SURVEY.error_chexbox'));\r\n          return;\r\n        }\r\n        this.currentStep++;\r\n      } else {\r\n        this.createSurveyResult();\r\n        this.apiService.postSurvey(this.surveyData._id, this.surveyResult).subscribe(\r\n          (res) => {\r\n            this.router.navigate(['/survey-post-complete']);\r\n          },\r\n          (error) => {}\r\n        );\r\n      }\r\n    } else {\r\n      this.currentStep--;\r\n    }\r\n  }\r\n\r\n  mappingSurveyData() {\r\n    this.survey = this.survey.map((item) => {\r\n      if (item.question_type == '0') {\r\n        item.answer = item.answer_option[0];\r\n        return item;\r\n      }\r\n      if (item.question_type == '1') {\r\n        item.answer_option = item.answer_option.map((option) => ({ value: option, isChecked: false }));\r\n        return item;\r\n      }\r\n      item.answer = '';\r\n      return item;\r\n    });\r\n  }\r\n\r\n  createSurveyResult() {\r\n    this.survey.forEach((item, index) => {\r\n      if (item.question_type == '0') {\r\n        this.surveyResult[`${index}`] = { content: item.question, answer: item.answer };\r\n      } else if (item.question_type == '1') {\r\n        const answerResult = item.answer_option.filter((option) => option.isChecked).map((op) => op.value);\r\n        this.surveyResult[`${index}`] = { content: item.question, answer: answerResult };\r\n      } else {\r\n        this.surveyResult[`${index}`] = { content: item.question, answer: item.answer };\r\n      }\r\n    });\r\n  }\r\n\r\n  async surveyDetailClick() {\r\n    const modal = await this.modalController.create({\r\n      component: PopupSurveyDetailPage,\r\n      componentProps: {\r\n        surveyData: this.surveyData\r\n      },\r\n      cssClass: 'survey-dtail-custom',\r\n    });\r\n    return await modal.present();\r\n  }\r\n\r\n  async presentAlert(message) {\r\n    var self = this;\r\n    const alert = await this.alertController.create({\r\n      header: self.translate.instant('COMMON.information'),\r\n      message: message,\r\n      buttons: ['OK'],\r\n    });\r\n    await alert.present();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { SuperTabsModule } from '@ionic-super-tabs/angular';\r\nimport { SurveyPage } from './survey.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: SurveyPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    TranslateModule,\r\n    MatTabsModule,\r\n    SuperTabsModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [SurveyPage]\r\n})\r\nexport class SurveyPageModule {}\r\n\r\n"]}