{"version":3,"sources":["./src/app/pages/payment/payment.module.ts","./src/app/pages/payment/payment.page.ts","./src/app/pages/payment/payment.page.html"],"names":[],"mappings":"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","file":"payment-payment-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SuperTabsModule } from '@ionic-super-tabs/angular';\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { PaymentPage } from './payment.page';\r\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PaymentPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SuperTabsModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    TranslateModule,\r\n    RouterModule.forChild(routes),\r\n  ],\r\n  declarations: [PaymentPage]\r\n})\r\nexport class PaymentPageModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Platform, NavController } from '@ionic/angular';\r\nimport { ConstService } from 'src/app/utils/const.service';\r\nimport { ApiService } from '../../services/api/api.service';\r\nimport { LoadingService } from '../../services/loading/loading.service';\r\nimport { UtilsService } from '../../utils/utils.service';\r\n\r\n@Component({\r\n  selector: 'app-payment',\r\n  templateUrl: './payment.page.html',\r\n  styleUrls: ['./payment.page.scss'],\r\n})\r\nexport class PaymentPage implements OnInit {\r\n  heightScreen: number;\r\n  // data\r\n  listPaymentBills = [];\r\n  listDataConvert: any;\r\n  currentPage: number;\r\n  numberRecordOnPage = ConstService.NUMBER_RECORD_ON_PAGE;\r\n  segmentModel: string = 'all';\r\n  today: any;\r\n  myDate: String = new Date().toISOString();\r\n  totalPayment = 0;\r\n\r\n  constructor(private loading: LoadingService, private platform: Platform, private apiService: ApiService, private navCtrl: NavController) {\r\n    this.platform.ready().then((readySource) => {\r\n      this.heightScreen = platform.height() - 250;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.currentPage = 1;\r\n    this.getPaymentLogs(this.currentPage, this.numberRecordOnPage, '', '', null, true);\r\n  }\r\n\r\n  ionViewWillEnter() {}\r\n\r\n  getPaymentLogs(page: number, limit: number, category: string, search: string, event: any, isRefresh: boolean) {\r\n    this.loading.present();\r\n    const self = this;\r\n    if (event) {\r\n      event.target.complete();\r\n    }\r\n    this.apiService.getListPayment(page, limit, category, search, 'publish').subscribe(\r\n      (result) => {\r\n        self.loading.dismiss();\r\n        if (!result.paymentBills || result.paymentBills.length == 0) {\r\n          return;\r\n        }\r\n        if(isRefresh) {\r\n          this.listPaymentBills = [];\r\n          this.totalPayment = 0;\r\n        }\r\n        result.paymentBills.forEach((bill) => {\r\n          if (bill.payment) {\r\n            let today = new Date();\r\n            let endAt = new Date(bill.payment.endAt);\r\n            if (today > endAt && bill.status == 'publish') {\r\n              bill.status = 'outdate';\r\n            }\r\n            bill.inOutDays = this.getDiffDays(today, endAt);\r\n            this.listPaymentBills.push(bill);\r\n            this.totalPayment += +bill.total;\r\n          }\r\n        });\r\n      },\r\n      (error) => {\r\n        self.loading.dismiss();\r\n      },\r\n      () => {\r\n        self.loading.dismiss();\r\n        if (event) {\r\n          event.target.complete();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  loadData($event) {\r\n    this.currentPage++;\r\n    this.getPaymentLogs(this.currentPage, this.numberRecordOnPage, '', '', $event, false);\r\n  }\r\n\r\n  paymentHistoryClick() {\r\n    this.navCtrl.navigateForward('/payment-history');\r\n  }\r\n\r\n  detailPage(id) {\r\n    this.navCtrl.navigateForward('/payment-infor/' + id);\r\n  }\r\n\r\n  doRefresh(event) {\r\n    this.currentPage = 1;\r\n    this.getPaymentLogs(this.currentPage, this.numberRecordOnPage, '', '', event, true);\r\n  }\r\n\r\n  formatString(stringDate: string) {\r\n    return UtilsService.formatString(stringDate);\r\n  }\r\n\r\n  formatMoney(stringValue) {\r\n    let n = parseInt(stringValue);\r\n    if (n) {\r\n      return n.toFixed(0).replace(/./g, function (c, i, a) {\r\n        return i > 0 && c !== ',' && (a.length - i) % 3 === 0 ? '.' + c : c;\r\n      });\r\n    } else {\r\n      return '-';\r\n    }\r\n  }\r\n  getDiffDays(startDate: Date, endDate: Date) {\r\n    const diffTime = Math.abs(endDate.getTime() - startDate.getTime());\r\n    return Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n  }\r\n}\r\n","<ion-header class=\"ion-no-border payment-header\">\r\n  <ion-button class=\"button-history\" (click)=\"paymentHistoryClick()\">\r\n    <img class=\"icon-history\" src=\"assets/icon/payment/time-circle.svg\" />\r\n    <ion-label class=\"label_history\">{{ 'PAYMENT.label_history' | translate }}</ion-label>\r\n  </ion-button>\r\n  <ion-label class=\"header-sub-title\" *ngIf=\"listPaymentBills.length > 0 && listPaymentBills[0].campaign.settingPaymentMode == 'active'\">{{ 'PAYMENT.need_payment' | translate }}</ion-label>\r\n  <ion-label class=\"header-sub-title\" *ngIf=\"listPaymentBills.length > 0 && listPaymentBills[0].campaign.settingPaymentMode != 'active'\">{{ 'PAYMENT.need_payment_inactive' | translate }}</ion-label>\r\n  <ion-label class=\"header-sub-title\" *ngIf=\"listPaymentBills.length == 0\">{{ 'PAYMENT.need_payment_no_pay' | translate }}</ion-label>\r\n  <ion-label class=\"header-title\" *ngIf=\"listPaymentBills.length > 0 && listPaymentBills[0].campaign.settingPaymentMode == 'active'\">{{ formatMoney(totalPayment) }}đ</ion-label>\r\n  <ion-label class=\"header-title\" *ngIf=\"listPaymentBills.length > 0 && listPaymentBills[0].campaign.settingPaymentMode != 'active'\">{{ formatMoney(listPaymentBills[0].total) }}đ</ion-label>\r\n</ion-header>\r\n\r\n<ion-content class=\"has-header payment-container\">\r\n  <ion-refresher slot=\"fixed\" (ionRefresh)=\"doRefresh($event)\" pullMin=\"100\">\r\n    <ion-refresher-content pullingIcon=\"circles\" refreshingSpinner=\"\" refreshingText=\"\"></ion-refresher-content>\r\n  </ion-refresher>\r\n  <ion-item lines=\"none\" class=\"payment-list-title\">\r\n    <ion-label *ngIf=\"listPaymentBills.length > 0 && listPaymentBills[0].campaign.settingPaymentMode == 'active'\">{{\"PAYMENT.payment_list_title\" | translate}}</ion-label>\r\n    <ion-label *ngIf=\"listPaymentBills.length > 0 && listPaymentBills[0].campaign.settingPaymentMode != 'active'\">{{\"PAYMENT.payment_list_title_inactive\" | translate}}</ion-label>\r\n  </ion-item>\r\n\r\n  <ion-list class=\"payment-ion-list\" [style.height.px]=\"heightScreen\">\r\n    <ion-card *ngFor=\"let item of listPaymentBills\" (click)=\"detailPage(item._id)\" class=\"payment-card\">\r\n      <ion-item lines=\"none\" class=\"payment-card-item\">\r\n        <ng-container [ngSwitch]=\"item.status\" *ngIf=\"item?.campaign.settingPaymentMode == 'active'\">\r\n          <ion-label slot=\"start\" class=\"update-time\" *ngSwitchCase=\"'publish'\">\r\n            {{formatString(item.updatedAt)}} - {{ 'PAYMENT.paid_in_days' | translate: { inOutDays: item.inOutDays } }}\r\n          </ion-label>\r\n          <ion-label slot=\"start\" class=\"update-time\" *ngSwitchCase=\"'outdate'\">\r\n            {{formatString(item.updatedAt)}} - {{ 'PAYMENT.paid_out_days' | translate: { inOutDays: item.inOutDays } }}\r\n          </ion-label>\r\n          <ion-label slot=\"start\" class=\"update-time\" *ngSwitchDefault>{{formatString(item.updatedAt)}}</ion-label>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"item?.campaign.settingPaymentMode != 'active'\">\r\n          <ion-label slot=\"start\" class=\"update-time\">{{formatString(item.updatedAt)}}</ion-label>\r\n        </ng-container>\r\n        <ion-badge class=\"badge-status badge-unpaid\" *ngIf=\"item.status == 'publish' && item?.campaign.settingPaymentMode == 'active'\">{{ 'PAYMENT.badge_unpaid' | translate }}</ion-badge>\r\n        <ion-badge class=\"badge-status badge-outdate\" *ngIf=\"item.status == 'outdate' && item?.campaign.settingPaymentMode == 'active'\">{{ 'PAYMENT.badge_outdate' | translate }}</ion-badge>\r\n      </ion-item>\r\n      <ion-text class=\"\">\r\n        <p class=\"payment-title\">{{item?.payment?.title}} - {{item?.apartment.title}} {{item?.campaign.title}}</p>\r\n      </ion-text>\r\n      <div class=\"devider-line-payment\"></div>\r\n\r\n      <ion-item lines=\"none\" class=\"payment-money-item\">\r\n        <ion-label fixed slot=\"start\" class=\"money-title\">{{\"PAYMENT.number_money_label\" | translate}} </ion-label>\r\n        <ion-label class=\"mone-number\">{{formatMoney(item.total)}}đ</ion-label>\r\n        <ion-button class=\"btn-paid\" slot=\"end\" *ngIf=\"item?.campaign.settingPaymentMode == 'active'\">{{\"PAYMENT.btn_paid_label\" | translate}}</ion-button>\r\n      </ion-item>\r\n    </ion-card>\r\n  </ion-list>\r\n  <ion-infinite-scroll threshold=\"100px\" (ionInfinite)=\"loadData($event)\">\r\n    <ion-infinite-scroll-content loadingSpinner=\"\" loadingText=\"\"></ion-infinite-scroll-content>\r\n  </ion-infinite-scroll>\r\n</ion-content>"],"sourceRoot":"webpack:///"}